[{"/Users/dragonlonss/biben/src/firebase.js":"1","/Users/dragonlonss/biben/src/App.js":"2","/Users/dragonlonss/biben/src/components/AddShapes.js":"3","/Users/dragonlonss/biben/src/components/LeftBar.js":"4","/Users/dragonlonss/biben/src/components/ToolBar.js":"5","/Users/dragonlonss/biben/src/homepage.js":"6","/Users/dragonlonss/biben/src/components/SignIn.js":"7","/Users/dragonlonss/biben/src/components/SignUp.js":"8","/Users/dragonlonss/biben/src/components/RectAdjust.js":"9","/Users/dragonlonss/biben/src/reportWebVitals.js":"10","/Users/dragonlonss/biben/src/components/PaintingTool.js":"11","/Users/dragonlonss/biben/src/components/SaveAndLoad.js":"12","/Users/dragonlonss/biben/src/components/TextAdjust.js":"13","/Users/dragonlonss/biben/src/components/AddedBoard.js":"14","/Users/dragonlonss/biben/src/index.js":"15","/Users/dragonlonss/biben/src/firebaseConfig.js":"16","/Users/dragonlonss/biben/src/profile.js":"17","/Users/dragonlonss/biben/src/components/Try_It.js":"18","/Users/dragonlonss/biben/src/components/Proverb.js":"19","/Users/dragonlonss/biben/src/components/ChatRoom.js":"20"},{"size":3395,"mtime":1607664720093,"results":"21","hashOfConfig":"22"},{"size":37106,"mtime":1608610264645,"results":"23","hashOfConfig":"22"},{"size":8999,"mtime":1608222332706,"results":"24","hashOfConfig":"22"},{"size":4853,"mtime":1608612352210,"results":"25","hashOfConfig":"22"},{"size":11200,"mtime":1608610212002,"results":"26","hashOfConfig":"22"},{"size":8019,"mtime":1608567685822,"results":"27","hashOfConfig":"22"},{"size":2033,"mtime":1608450580472,"results":"28","hashOfConfig":"22"},{"size":2229,"mtime":1608540850242,"results":"29","hashOfConfig":"22"},{"size":3567,"mtime":1607846357998,"results":"30","hashOfConfig":"22"},{"size":362,"mtime":1606268617683,"results":"31","hashOfConfig":"22"},{"size":2794,"mtime":1607852961336,"results":"32","hashOfConfig":"22"},{"size":3228,"mtime":1608467903324,"results":"33","hashOfConfig":"22"},{"size":8821,"mtime":1608222382540,"results":"34","hashOfConfig":"22"},{"size":4653,"mtime":1608615764683,"results":"35","hashOfConfig":"22"},{"size":2620,"mtime":1608019018977,"results":"36","hashOfConfig":"22"},{"size":407,"mtime":1606618193197,"results":"37","hashOfConfig":"22"},{"size":16816,"mtime":1608616166456,"results":"38","hashOfConfig":"22"},{"size":5134,"mtime":1608448511430,"results":"39","hashOfConfig":"22"},{"size":5177,"mtime":1608522987458,"results":"40","hashOfConfig":"22"},{"size":3297,"mtime":1608611964214,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"1mydild",{"filePath":"45","messages":"46","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dragonlonss/biben/src/firebase.js",["103","104","105","106","107","108","109"],"import React, { useState } from \"react\";\nimport firebase from \"firebase\";\nimport firebaseConfig from \"./firebaseConfig\";\n\nexport const signInWithGoogle = () => {\n  const provider = new firebase.auth.GoogleAuthProvider();\n  signInWith(provider);\n};\n\nexport const signInWithFB = () => {\n  const provider = new firebase.auth.FacebookAuthProvider();\n  signInWith(provider);\n  console.log(provider);\n};\n\nconst signInWith = (provider) => {\n  // const app = firebase.apps.length\n  //   ? firebase.app()\n  //   : firebase.initializeApp(firebaseConfig);\n  // provider.setCustomParameters({\n  //   prompt: \"select_account\",\n  // });\n  firebase\n    .auth()\n    .signInWithPopup(provider)\n    .then(function (result) {\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n      // var token = result.credential.accessToken;\n      // The signed-in user info.\n      var email = result.user.email;\n      let canvasOwn = [];\n      // ...\n      // console.log(result.user);\n      console.log(\"login successfully\");\n      var db = firebase.firestore();\n      var emailExist;\n      db.collection(\"users\")\n        .doc(email)\n        .get()\n        .then((q) => {\n          emailExist = q.exists;\n        })\n        .then(() => {\n          if (!emailExist) {\n            db.collection(\"users\").doc(email).set({\n              email: email,\n              canvasOwn: [],\n              canvasRead: [],\n            });\n            // } else {\n            //   db.collection(\"users\")\n            //     .doc(email)\n            //     .get()\n            //     .then((querySnapshot) => {\n            //       // querySnapshot.data().canvasOwn.forEach((can) => {\n            //       //   console.log(\"cavas: \" + can);\n            //       // });\n            //       // console.log(querySnapshot.data());\n            //       canvasOwn = querySnapshot.data().canvasOwn;\n            //     })\n            //     .then(() => {\n            //       canvasOwn.forEach((can) => {\n            //         db.collection(\"canvases\")\n            //           .doc(can)\n            //           .get()\n            //           .then((q) => {\n            //             // console.log(q.data().data);\n            //           });\n            //       });\n            //       // console.log(canvasOwn);\n            //     });\n          }\n        });\n    })\n    .catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      console.log(error);\n      var errorMessage = error.message;\n      console.log(errorMessage);\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n    });\n};\n\nexport const signOut = () => {\n  firebase\n    .auth()\n    .signOut()\n    .then(function () {\n      //登出成功\n      console.log(\"logout\");\n    })\n    .catch(function (error) {\n      //錯誤事件\n      var errorMessage = error.message;\n      console.log(\"logout error\", errorMessage);\n    });\n};\n\nexport const firebaseGet = () => {\n  const app = firebase.apps.length\n    ? firebase.app()\n    : firebase.initializeApp(firebaseConfig);\n  var db = firebase.firestore();\n  db.collection(\"users\")\n    .get()\n    .then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        console.log(doc.id, doc.data());\n      });\n    });\n};\n","/Users/dragonlonss/biben/src/App.js",["110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"import React, { useState, useEffect } from \"react\";\nimport { fabric } from \"fabric\";\nimport \"./App.scss\";\nimport firebase from \"firebase/app\";\nimport firebaseConfig from \"./firebaseConfig\";\n// import {} from \"./components/fabric-brush\";\n// import AddShapes from \"./components/AddShapes\";\nimport TextAdjust from \"./components/TextAdjust\";\nimport RectAdjust from \"./components/RectAdjust\";\nimport ToolBar from \"./components/ToolBar\";\nimport PaintingTool from \"./components/PaintingTool\";\nimport SaveAndLoad from \"./components/SaveAndLoad\";\nimport LeftBar from \"./components/LeftBar\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ChatRoom from \"./components/ChatRoom\";\nimport logo from \"./Img/icon13.svg\";\nimport { ReactComponent as Cancel } from \"./Img/back/cancel.svg\";\nimport { doc } from \"prettier\";\nimport \"fabric-history\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { browserHistory } from \"react-router\";\nimport { createBrowserHistory } from \"history\";\nimport { ReactComponent as Cowork } from \"./Img/profile/undraw_Online_collaboration.svg\";\nimport { ReactComponent as Learn } from \"./Img/profile/undraw_Online_learning.svg\";\n\nexport const updateToCloud = (canvas) => {\n  let canvasToUpload = JSON.stringify(canvas.toJSON());\n  const dataURL = canvas.toDataURL({\n    format: \"png\",\n    top: 0,\n    left: 0,\n    width: canvas.width,\n    height: canvas.height,\n    multiplier: 0.5,\n    quality: 0.1,\n  });\n  firebase\n    .firestore()\n    .collection(\"canvases\")\n    .doc(window.location.pathname.split(\"/\")[2])\n    .update({\n      data: canvasToUpload,\n      photoURL: dataURL,\n    });\n};\n\nconst App = () => {\n  const [canvas, setCanvas] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [shareInput, setShareInput] = useState(\"\");\n  const [shareInputUse, setShareInputUse] = useState(\"\");\n  const [shareInputObserve, setShareInputObserve] = useState(\"\");\n  const db = firebase.firestore();\n\n  // let canvasToUpload;\n\n  //\n  // db.collection(\"canvases\")\n  //   .doc(window.location.pathname.split(\"/\")[2])\n  //   .onSnapshot((querySnapshot) => {\n  //     canvas.loadFromJSON(querySnapshot.data().data);\n  //   });\n\n  useEffect(() => {\n    // let editor = \"\";\n    // console.log(window.location.pathname.split(\"/\")[2]);\n    let canvasToSet = new fabric.Canvas(\"canvas\", {\n      // height: 500,\n      // width: 600,\n      width: window.innerWidth,\n      height: window.innerHeight - 60,\n      backgroundColor: \"#ffffff\",\n      selection: false,\n      objectChaching: false,\n    });\n\n    db.collection(\"canvases\")\n      .doc(window.location.pathname.split(\"/\")[2])\n      .get()\n      .then((data) => {\n        // if (data) {\n        setName(data.data().name);\n      });\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        // User is signed in.\n        setAuthor(user.email);\n        // editor = user.email;\n        console.log(user.email);\n        // fabric.Object.prototype.toObject = (function (toObject) {\n        //   return function (propertiesToInclude) {\n        //     return fabric.util.object.extend(\n        //       toObject.call(this, propertiesToInclude),\n        //       {\n        //         editor: user.email, //my custom property\n        //         // _controlsVisibility: this._getControlsVisibility(), //i want to get the controllsVisibility\n        //       }\n        //     );\n        //   };\n        // })(fabric.Object.prototype.toObject);\n        canvasToSet.on(\"object:modified\", () => {\n          // console.log(e.target);\n          // console.log(beenStoped);\n          // if (canvasToSet.getActiveObject()) {\n          console.log(\"modified\");\n          // updateToCloud();\n          if (beenStoped) {\n            updateModifiedData(user.email, () => {\n              updateSelectToCloud(user.email);\n            });\n          } else {\n            if (canvasToSet.getActiveObject()) {\n              updateSelectToCloud(user.email);\n              updateToCloud(canvasToSet);\n            } else {\n              updateToCloud(canvasToSet);\n            }\n          }\n          // if (\n          //   canvasToSet.getActiveObject() &&\n          //   canvasToSet.getActiveObject().type === \"activeSelection\"\n          // ) {\n          //   console.log(\"QQ\");\n          //   updateToCloud();\n          // } else if (\n          //   canvasToSet.getActiveObject() &&\n          //   canvasToSet.getActiveObject().type === \"group\"\n          // ) {\n          //   console.log(\"group\");\n          //   updateToCloud();\n          //   // } else if (e.target && e.target.type === \"group\") {\n          //   //   updateToCloud();\n          //   //   console.log(\"e_active\");\n          // } else {\n          //   if (e.target) {\n          //     console.log(e);\n          //   }\n          //   console.log(\"add\");\n          //   updateModifiedData(user.email, () => {\n          //     updateSelectToCloud(user.email);\n          //   });\n          // }\n          // updateSelectToCloud(user.email);\n          // }\n        });\n        canvasToSet.on(\"selection:created\", () => {\n          // getActive();\n          updateSelectToCloud(user.email);\n          // console.log(e.target);\n        });\n        canvasToSet.on(\"selection:updated\", () => {\n          updateSelectToCloud(user.email);\n          // canvasToSet.fire(\"object:modified\");\n        });\n        canvasToSet.on(\"mouse:down\", () => {\n          if (!canvasToSet.getActiveObject()) {\n            db.collection(\"selectedObj\")\n              .doc(window.location.pathname.split(\"/\")[2])\n              .collection(\"userSelect\")\n              .doc(user.email)\n              .update({\n                selected: false,\n              });\n          }\n        });\n        window.onbeforeunload = () => {\n          db.collection(\"selectedObj\")\n            .doc(window.location.pathname.split(\"/\")[2])\n            .collection(\"userSelect\")\n            .doc(user.email)\n            .update({\n              selected: false,\n            });\n          const dataURL = canvasToSet.toDataURL({\n            format: \"png\",\n            top: 0,\n            left: 0,\n            width: canvasToSet.width,\n            height: canvasToSet.height,\n            multiplier: 0.5,\n            quality: 0.1,\n          });\n          db.collection(\"canvases\")\n            .doc(window.location.pathname.split(\"/\")[2])\n            .update({\n              photoURL: dataURL,\n            });\n        };\n      }\n    });\n\n    fabric.Object.prototype.set({\n      cornerColor: \"white\",\n      conerSize: 20,\n      cornerStrokeColor: \"gray\",\n      borderColor: \"gray\",\n      transparentCorners: false,\n      cornerStyle: \"circle\",\n      padding: 10,\n    });\n\n    fabric.Object.prototype.controls.mtr = new fabric.Control({\n      x: 0,\n      y: -0.5,\n      offsetY: -40,\n      withConnection: true,\n      actionName: \"rotate\",\n      cursorStyle: \"pointer\",\n      // mouseUpHandler: rotateObject,\n\n      cornerSize: 20,\n      actionHandler: fabric.controlsUtils.rotationWithSnapping,\n    });\n\n    function output(formatType) {\n      const dataURL = canvas.toDataURL({\n        format: \"png\",\n        top: 0,\n        left: 0,\n        width: canvas.width,\n        height: canvas.height,\n        multiplier: 0.5,\n        quality: 0.1,\n      });\n      var img = new Image();\n      img.src = dataURL;\n      var storageRef = firebase\n        .storage()\n        .ref(\"image_for_canvas/\" + window.location.pathname.split(\"/\")[2]);\n      storageRef.put(img);\n      // const a = document.createElement(\"a\");\n      // a.href = dataURL;\n      // a.download = `output.${formatType}`;\n      // document.body.appendChild(a);\n      // a.click();\n      // document.body.removeChild(a);\n    }\n\n    function updateModifiedData(user, callback) {\n      db.collection(\"selectedObj\")\n        .doc(window.location.pathname.split(\"/\")[2])\n        .collection(\"userSelect\")\n        .doc(user)\n        .get()\n        .then((selectData) => {\n          db.collection(\"canvases\")\n            .doc(window.location.pathname.split(\"/\")[2])\n            .get()\n            .then((canvasData) => {\n              beenStoped = false;\n              if (selectData.exists) {\n                let selectedD = JSON.parse(selectData.data().ObjSelected);\n                let canvasD = JSON.parse(canvasData.data().data);\n                let activeD = canvasToSet.getActiveObject();\n                // console.log(canvasD.objects);\n                // console.log(activeD);\n                // console.log(selectedD);\n                // if (!activeD && canvasD.objects.length === 0) {\n                //   updateToCloud(canvasToSet);\n                // }\n\n                canvasD.objects.forEach((obj) => {\n                  if (\n                    obj.type === selectedD.type &&\n                    obj.left === selectedD.left &&\n                    obj.top === selectedD.top &&\n                    obj.width === selectedD.width &&\n                    obj.height === selectedD.height &&\n                    obj.fill === selectedD.fill &&\n                    obj.stroke === selectedD.stroke &&\n                    obj.strokeWidth === selectedD.strokeWidth &&\n                    obj.angle === selectedD.angle\n                    // JSON.stringify(obj) === JSON.stringify(selectedD)\n                    //find the selected one\n                  ) {\n                    // console.log(JSON.stringify(obj));\n                    canvasD.objects.splice(\n                      canvasD.objects.indexOf(obj),\n                      1,\n                      activeD\n                    );\n                    db.collection(\"canvases\")\n                      .doc(window.location.pathname.split(\"/\")[2])\n                      .update({\n                        data: JSON.stringify(canvasD),\n                      });\n                    // console.log(canvasD.length);\n                  }\n                });\n                // console.log(JSON.stringify(activeD));\n                // console.log(canvasD.objects);\n                if (activeD) {\n                  callback();\n                }\n              } else {\n                updateToCloud(canvasToSet);\n              }\n            });\n        });\n    }\n    // function addToCloud(){\n    //   db.collection(\"canvases\")\n    //             .doc(window.location.pathname.split(\"/\")[2])\n    //             .get()\n    //             .then((canvasData) => {\n    //               // console.log(selectData);\n    //               let canvasD = JSON.parse(canvasData.data().data);\n    //               let activeD = canvasToSet.getActiveObject();\n    //               anvasD.objects.push(activeD);\n    //               db.collection(\"canvases\")\n    //                     .doc(window.location.pathname.split(\"/\")[2])\n    //                     .update({\n    //                       data: JSON.stringify(canvasD),\n    //                     });\n    //             })\n    // }\n    // };\n    // if (editor === \"aaa@gmail.com\") {\n    //   color = \"red\";\n    // } else if (editor === \"bbb@gmail.com\") {\n    //   color = \"blue\";\n    // } else {\n    //   color = \"gray\";\n    // }\n\n    // fabric.Object.prototype.set({\n    //   cornerColor: \"white\",\n    //   conerSize: 20,\n    //   cornerStrokeColor: color,\n    //   borderColor: color,\n    //   transparentCorners: false,\n    //   cornerStyle: \"circle\",\n    //   padding: 10,\n    // });\n    // canvasToSet.preserveObjectStacking = true;\n    //override prototype.toObject and add your custom properties here\n    // fabric.Object.prototype.toObject = (function (toObject) {\n    //   return function () {\n    //     return fabric.util.object.extend(toObject.call(this), {\n    //       author: author, //my custom property\n    //       // _controlsVisibility: this._getControlsVisibility(), //i want to get the controllsVisibility\n    //     });\n    //   };\n    // })(fabric.Object.prototype.toObject);\n    // fabric.Object.prototype.toObject = (function (toObject) {\n    //   return function (propertiesToInclude) {\n    //     return fabric.util.object.extend(\n    //       toObject.call(this, propertiesToInclude),\n    //       {\n    //         editor: author, //my custom property\n    //         // _controlsVisibility: this._getControlsVisibility(), //i want to get the controllsVisibility\n    //       }\n    //     );\n    //   };\n    // })(fabric.Object.prototype.toObject);\n    // canvasToSet.historyInit();\n    // canvasToSet.on(\"object:modified\", (e) => {\n    //   updateToCloud();\n    // });\n    canvasToSet.on(\"object:added\", (e) => {\n      console.log(\"added\");\n    });\n    canvasToSet.on(\"object:removed\", (e) => {\n      console.log(\"removed\");\n      // updateToCloud();\n    });\n\n    var updateAble = true;\n    var beenStoped = false;\n    canvasToSet.on(\"mouse:up\", () => {\n      if (canvasToSet.isDrawingMode) {\n        updateToCloud(canvasToSet);\n      }\n\n      updateAble = true;\n      // console.log(updateAble);\n      // console.log(\"up\");\n      // updateToCloud();\n    });\n    canvasToSet.on(\"mouse:down\", () => {\n      updateAble = false;\n      // console.log(updateAble);\n    });\n    // let undoArr = [];\n    // let opencanvasSnap = false;\n    db.collection(\"canvases\")\n      .doc(window.location.pathname.split(\"/\")[2])\n      .get()\n      .then((data) => {\n        // opencanvasSnap = true;\n        // firebase.auth().onAuthStateChanged(function (user) {\n        //   setActive(user.email, () => {\n        // canvasToSet.loadFromJSON(data.data().data);\n        canvasToSet.clearHistory();\n        // console.log(opencanvasSnap);\n        // });\n        // });\n      });\n\n    db.collection(\"canvases\")\n      .doc(window.location.pathname.split(\"/\")[2])\n      .onSnapshot((querySnapshot) => {\n        // if (opencanvasSnap) {\n        // console.log(opencanvasSnap);\n        if (!updateAble && canvasToSet.getObjects()) {\n          beenStoped = true;\n          return;\n        } else {\n          // console.log(\"new\");\n          firebase.auth().onAuthStateChanged(function (user) {\n            // updateSelectToCloud(user.email);\n            setActive(user.email, () => {\n              canvasToSet.offHistory();\n              canvasToSet.loadFromJSON(querySnapshot.data().data);\n              canvasToSet.onHistory();\n            });\n            // canvasToSet.onHistory();\n          });\n          // canvasToSet.clearHistory();\n        }\n        // }\n      });\n\n    const updateSelectToCloud = (user) => {\n      let ObjSelected = JSON.stringify(canvasToSet.getActiveObject());\n      // console.log(ObjSelected);\n      db.collection(\"selectedObj\")\n        .doc(window.location.pathname.split(\"/\")[2])\n        .collection(\"userSelect\")\n        .doc(user)\n        .set({\n          ObjSelected: ObjSelected,\n          selected: true,\n        });\n    };\n\n    db.collection(\"selectedObj\")\n      .doc(window.location.pathname.split(\"/\")[2])\n      .collection(\"userSelect\")\n      .onSnapshot((querySnapshot) => {\n        if (!updateAble && canvasToSet.getObjects()) {\n          beenStoped = true;\n          return;\n        } else {\n          firebase.auth().onAuthStateChanged(function (user) {\n            querySnapshot.docChanges().forEach((change) => {\n              // console.log(\"selectUp\");\n              if (change.type === \"added\") {\n                querySnapshot.forEach((doc) => {\n                  // console.log(doc.exists());\n                  if (doc.id !== user.email) {\n                    // console.log(doc.data().ObjSelected);\n                    let json = JSON.parse(doc.data().ObjSelected);\n                    // console.log(canvasToSet.getObjects());\n                    canvasToSet.getObjects().forEach((obj) => {\n                      if (\n                        doc.data().selected === true &&\n                        obj.type === json.type &&\n                        obj.left === json.left &&\n                        obj.height === json.height\n                      ) {\n                        // console.log(\"1\");\n                        obj.set({\n                          opacity: 0.4,\n                          // opacity: json.opacity * 0.4,\n                          selectable: false,\n                          evented: false,\n                        });\n                        canvasToSet.renderAll();\n                      }\n                    });\n                  }\n                });\n              }\n              if (change.type === \"modified\") {\n                querySnapshot.forEach((doc) => {\n                  if (doc.id !== user.email) {\n                    // console.log(doc.data().ObjSelected);\n                    let json = JSON.parse(doc.data().ObjSelected);\n                    // console.log(json);\n                    canvasToSet.getObjects().forEach((obj) => {\n                      // console.log(doc.data());\n                      // console.log(\"2\");\n                      obj.set({\n                        opacity: 1,\n                        // opacity: json.opacity * 2.5,\n                        selectable: true,\n                        evented: true,\n                      });\n                      // if (obj.opacity > 1) {\n                      //   obj.set({\n                      //     opacity: 1,\n                      //   });\n                      // }\n                      canvasToSet.renderAll();\n                      if (\n                        obj.type === json.type &&\n                        obj.left === json.left &&\n                        obj.height === json.height\n                      ) {\n                        // console.log(\"got\");\n                        if (doc.data().selected) {\n                          obj.set({\n                            opacity: 0.4,\n                            // opacity: json.opacity * 0.4,\n                            selectable: false,\n                            evented: false,\n                          });\n                        }\n                        canvasToSet.renderAll();\n                      }\n                    });\n                  }\n                });\n              }\n            });\n          });\n        }\n      });\n\n    const setActive = (user, callback) => {\n      db.collection(\"selectedObj\")\n        .doc(window.location.pathname.split(\"/\")[2])\n        .collection(\"userSelect\")\n        .get()\n        .then((querySnapshot) => {\n          db.collection(\"canvases\")\n            .doc(window.location.pathname.split(\"/\")[2])\n            .get()\n            .then((data) => {\n              // canvasToSet.onHistory();\n              if (data.data().data === \"\") {\n                return;\n              }\n              let canvasCloud = JSON.parse(data.data().data).objects;\n              let canvasNow = canvasToSet.toJSON().objects;\n              // console.log(canvasCloud);\n              // console.log(canvasNow);\n              for (var i = 0; i < canvasCloud.length; i++) {\n                if (\n                  canvasNow.length === canvasCloud.length &&\n                  canvasCloud[i].type === canvasNow[i].type &&\n                  canvasCloud[i].left === canvasNow[i].left &&\n                  canvasCloud[i].top === canvasNow[i].top &&\n                  canvasCloud[i].width === canvasNow[i].width &&\n                  canvasCloud[i].height === canvasNow[i].height &&\n                  canvasCloud[i].fill === canvasNow[i].fill &&\n                  canvasCloud[i].stroke === canvasNow[i].stroke &&\n                  canvasCloud[i].strokeWidth === canvasNow[i].strokeWidth &&\n                  canvasCloud[i].angle === canvasNow[i].angle\n                ) {\n                  console.log(\"same\");\n                } else {\n                  console.log(\"diff\");\n                  callback();\n                }\n              }\n              // canvasCloud.forEach((obj)=>{\n              //   if(obj.type === selectedD.type &&\n              //     obj.left === selectedD.left &&\n              //     obj.top === selectedD.top &&\n              //     obj.width === selectedD.width &&\n              //     obj.height === selectedD.height &&\n              //     obj.fill === selectedD.fill &&\n              //     obj.stroke === selectedD.stroke &&\n              //     obj.strokeWidth === selectedD.strokeWidth &&\n              //     obj.angle === selectedD.angle){\n              //       return;\n              //     }else{\n              //       callback();\n              //     }\n              // })\n              // if (canvasCloud !== canvasNow) {\n              // callback();\n              //   // console.log(\"diff\");\n              //   // } else {\n              //   //   // console.log(\"same\");\n              // }\n\n              // console.time(\"123\");\n              querySnapshot.forEach((doc) => {\n                if (doc.id !== user) {\n                  // console.log(\"y\");\n                  let json = JSON.parse(doc.data().ObjSelected);\n                  // console.log(json);\n                  canvasToSet.getObjects().forEach((obj) => {\n                    // console.log(obj);\n                    if (\n                      doc.data().selected &&\n                      obj.type === json.type &&\n                      obj.left === json.left &&\n                      obj.height === json.height\n                    ) {\n                      // console.log(\"setO\");\n                      obj.set({\n                        // opacity: json.opacity * 0.4,\n                        opacity: 0.4,\n                        selectable: false,\n                        evented: false,\n                      });\n                      canvasToSet.renderAll();\n                    }\n                  });\n                } else if (doc.id === user && doc.data()) {\n                  let json = JSON.parse(doc.data().ObjSelected);\n                  canvasToSet.getObjects().forEach((obj) => {\n                    if (\n                      doc.data().selected &&\n                      obj.type === json.type &&\n                      obj.left === json.left &&\n                      obj.height === json.height\n                    ) {\n                      obj.set({\n                        opacity: 1,\n                        selectable: true,\n                        evented: true,\n                      });\n                      canvasToSet.setActiveObject(obj);\n                      canvasToSet.renderAll();\n                    }\n                  });\n                }\n              });\n            }); // console.timeEnd(\"123\");\n        });\n    };\n\n    // canvasToSet.isDrawingMode = true;\n    // addKeyControl();\n    // canvasToSet.clearHistory();\n    // if (shouldBlockNavigation) {\n    //   window.onbeforeunload = () => true;\n    // } else {\n    //   window.onbeforeunload = undefined;\n    // }\n    setCanvas(canvasToSet);\n    console.log(canvasToSet.historyUndo);\n    // const history = createBrowserHistory();\n    // history.listen((location) => console.log(location));\n    // const history = useHistory();\n    // canvasToSet.clearHistory();\n    // let history = useHistory();\n    // return () => {\n    // history.listen((location) => {\n    //   console.log(`You changed the page to: ${location.pathname}`);\n    // });\n    // };\n  }, []);\n  // const history = createBrowserHistory();\n\n  // useEffect(() => {\n  //   browserHis\n  //   return history.listenBefore(() => {\n  //     firebase.auth().onAuthStateChanged(function (user) {\n  //       db.collection(\"selectedObj\")\n  //         .doc(window.location.pathname.split(\"/\")[2])\n  //         .collection(\"userSelect\")\n  //         .doc(user.email)\n  //         .update({\n  //           selected: false,\n  //         });\n  //       const dataURL = canvas.toDataURL({\n  //         format: \"png\",\n  //         top: 0,\n  //         left: 0,\n  //         width: canvas.width,\n  //         height: canvas.height,\n  //         multiplier: 0.5,\n  //         quality: 0.1,\n  //       });\n  //       db.collection(\"canvases\")\n  //         .doc(window.location.pathname.split(\"/\")[2])\n  //         .update({\n  //           photoURL: dataURL,\n  //         });\n  //     });\n  //   });\n  // }, [history]);\n  // if (active) {\n  //   canvas.setActiveObject(active);\n  // }\n  // useEffect(() => console.log(canvasToLoad), []);\n  // canvas.loadFromJSON(canvasToLoad);\n  // console.log(canvasToLoad);\n  // fabric.Object.prototype.toObject = (function (toObject) {\n  //   return function () {\n  //     return fabric.util.object.extend(toObject.call(this), {\n  //       author: author, //my custom property\n  //       // _controlsVisibility: this._getControlsVisibility(), //i want to get the controllsVisibility\n  //     });\n  //   };\n  // })(fabric.Object.prototype.toObject);\n\n  // const handleInputName = (e) => {\n  //   setName(e.target.value);\n  // };\n\n  //changeCanvasColor\n  // const changeCanvasColor = (e) => {\n  //   canvas.backgroundColor = e.target.value;\n  //   setCanvasColor(e.target.value);\n  //   canvas.renderAll();\n  // };\n\n  // let mouseX;\n  // let mouseY;\n  // let scrollX;\n  // let scrollY;\n  // let mouseDown = false;\n  // onkeydown = (e) => {\n  //   console.log(e.keyCode);\n  //   var ctrlDown = false,\n  //     ctrlKey = 17,\n  //     cmdKeyL = 91,\n  //     cmdKeyR = 93;\n  //   if (\n  //     e.keyCode === ctrlKey ||\n  //     e.keyCode === cmdKeyL ||\n  //     e.keyCode === cmdKeyR\n  //   ) {\n  //     ctrlDown = true;\n  //   }\n  // };\n  // // onmousewheel = (e) => {\n  // //   console.log(e);\n  // // };\n  // const mousedown = (e) => {\n  //   mouseDown = true;\n  //   let can = document.querySelector(\"#canvas\");\n  //   mouseX = e.pageX;\n  //   mouseY = e.pageY;\n  //   scrollX = can.scrollLeft;\n  //   scrollY = can.scrollTop;\n  //   console.log(e.pageX, e.pageY);\n  //   console.log(scrollX, scrollY);\n  //   console.log(\"r\");\n  // };\n  // const mouseup = () => {};\n  // const mouseleave = () => {};\n  // const mousemove = () => {};\n\n  // onmousedown = (e) => {\n  //   mouseDown = true;\n  //   let can = document.querySelector(\"#canvas\");\n  //   mouseX = e.pageX;\n  //   mouseY = e.pageY;\n  //   scrollX = can.scrollLeft;\n  //   scrollY = can.scrollTop;\n  //   // console.log(e.pageX, e.pageY);\n  //   console.log(scrollX, scrollY);\n  // };\n  // onmousemove = (e) => {\n  //   let can = document.querySelector(\"#canvas\");\n  //   if (mouseDown) {\n  //     let moveX = e.pageX - mouseX;\n  //     let moveY = e.pageY - mouseY;\n  //     can.scrollLeft = scrollX - moveX;\n  //     // console.log(moveX, moveY);\n  //   }\n  // };\n  // onmouseup = () => {\n  //   mouseDown = false;\n  // };\n  //記錄滑鼠狀態\n  // var move_div; //要操作的div物件\n  // var m_move_x, m_move_y, m_down_x, m_down_y, dx, dy, md_x, md_y, ndx, ndy;\n  // //滑鼠按下\n  // function down() {\n  // move_div = document.getElementById(\"canvas\");\n  // isDown = true;\n  // //獲取滑鼠按下時座標\n  // m_down_x = event.pageX;\n  // m_down_y = event.pageY;\n  // //獲取div座標\n  // dx = move_div.offsetLeft;\n  // dy = move_div.offsetTop;\n  // //獲取滑鼠與div偏移量\n  // md_x = m_down_x - dx;\n  // md_y = m_down_y - dy;\n  // }\n  // //滑鼠移動\n  // function move() {\n  // move_div = document.getElementById(\"canvas\");\n  // //實時更新div的座標\n  // dx = move_div.offsetLeft;\n  // dy = move_div.offsetTop;\n  // //獲取滑鼠移動實時座標\n  // m_move_x = event.pageX;\n  // m_move_y = event.pageY;\n  // //滑鼠按下時移動才觸發\n  // if (isDown) {\n  //   //獲取新div座標，滑鼠實時座標 - 滑鼠與div的偏移量\n  //   ndx = m_move_x - md_x;\n  //   ndy = m_move_y - md_y;\n  //   //把新div座標值賦給div物件\n  //   move_div.style.left = ndx + \"px\";\n  //   move_div.style.top = ndy + \"px\";\n  // }\n  // }\n  // //滑鼠釋放\n  // function up() {\n  //   // isDown = false;\n  // }\n  // //crayon\n  // const crayon = () => {\n  //   canvas.freeDrawingBrush = new fabric.CrayonBrush(canvas, {\n  //     // width: 70,\n  //     opacity: 0.6,\n  //     // color: \"#ff0000\",\n  //   });\n  //   canvas.on(\"mouse:up\", function (opt) {\n  //     if (canvas.isDrawingMode) {\n  //       var c = fabric.util.copyCanvasElement(canvas.upperCanvasEl);\n  //       var img = new fabric.Image(c);\n  //       canvas.contextTopDirty = true;\n  //       canvas.add(img);\n  //       canvas.isDrawingMode = false;\n  //     }\n  //   });\n  // };\n\n  // const Ink = () => {\n  //   canvas.freeDrawingBrush = new fabric.InkBrush(canvas, {\n  //     // width: 70,\n  //     opacity: 0.6,\n  //     // color: \"#ff0000\",\n  //   });\n  // };\n\n  // const Marker = () => {\n  //   canvas.freeDrawingBrush = new fabric.MarkerBrush(canvas, {\n  //     // width: 70,\n  //     opacity: 0.6,\n  //     // color: \"#ff0000\",\n  //   });\n  // };\n\n  //drawingBox\n\n  // const $ = (id) => document.getElementById(id);\n  // const strokeWidthValue = $(\"strokeWidthValue\");\n  // const drawingOptionArea = $(\"drawingOptionArea\");\n  // const clearBtn = $(\"clear\");\n  // const modeBtn = $(\"mode\");\n\n  // const outputJpegBtn = $(\"outputJpgBtn\");\n  // const outputPngBtn = $(\"outputPngBtn\");\n  // const brushSelector = $(\"brushSelect\");\n\n  // const myShadow = {\n  //   color: \"black\",\n  //   blur: 1,\n  //   offsetX: 1,\n  //   offsetY: 1,\n  // };\n  // function selectBrush() {\n  //   if (brushSelector.value === \"Square\") {\n  //     const squareBrush = new fabric.PatternBrush(canvas);\n  //     // getPatternSrc  取得要重複繪製的圖形 Canvas\n  //     squareBrush.getPatternSrc = function () {\n  //       const squareWidth = 30;\n  //       const squareDistance = 2;\n  //       // 創立一個暫存 canvas 來繪製要畫的圖案\n  //       const patternCanvas = fabric.document.createElement(\"canvas\");\n  //       // canvas 總大小為每一格畫筆的大小\n  //       patternCanvas.width = patternCanvas.height =\n  //         squareWidth + squareDistance;\n  //       const ctx = patternCanvas.getContext(\"2d\");\n  //       ctx.fillStyle = lineColorInput.value;\n  //       ctx.fillRect(0, 0, squareWidth, squareWidth);\n  //       // 回傳繪製完畢的 canvas\n  //       return patternCanvas;\n  //     };\n\n  //     canvas.freeDrawingBrush = squareBrush;\n  //   } else {\n  //     canvas.freeDrawingBrush = new fabric[`${brushSelector}.value ` + \"Brush\"](\n  //       canvas\n  //     );\n  //   }\n  //   canvas.freeDrawingBrush.color = lineColorInput.value;\n  //   canvas.freeDrawingBrush.width = parseInt(lineWidthInput.value, 10) || 1;\n  //   // canvas.freeDrawingBrush.setShadow(myShadow);\n  // }\n  // canvas.historyInit();\n  //share\n  // const shareCanvas = (observerEmail) => {\n  //   let canvasId = window.location.pathname.split(\"/\")[2];\n\n  //   db.collection(\"canvases\")\n  //     .doc(canvasId)\n  //     .update({\n  //       observer: firebase.firestore.FieldValue.arrayUnion(observerEmail),\n  //     });\n  //   db.collection(\"users\")\n  //     .doc(observerEmail)\n  //     .update({\n  //       canvasRead: firebase.firestore.FieldValue.arrayUnion(canvasId),\n  //     });\n  // };\n\n  // const handleShare = () => {\n  //   shareCanvas(shareInput);\n  //   setShareInput(\"\");\n  //   shareBoxNon();\n  // };\n  // const shareBoxNon = () => {\n  //   document.querySelector(\"#darkBack\").style.display = \"none\";\n  //   document.querySelector(\"#dark\").style.display = \"none\";\n  // };\n\n  // const showShareBox = () => {\n  //   document.querySelector(\"#darkBack\").style.display = \"flex\";\n  //   document.querySelector(\"#dark\").style.display = \"block\";\n  // };\n  // const sharePagePop = () => {\n  //   document.querySelector(\"#darkBack\").className = \"scaleIn\";\n  //   document.querySelector(\"#darkBack\").style.display = \"flex\";\n  //   document.querySelector(\"#dark\").style.display = \"block\";\n  // };\n\n  const shareCanvasUse = (observerEmail) => {\n    let canvasId = window.location.pathname.split(\"/\")[2];\n\n    db.collection(\"canvases\")\n      .doc(canvasId)\n      .update({\n        user: firebase.firestore.FieldValue.arrayUnion(observerEmail),\n      });\n    db.collection(\"users\")\n      .doc(observerEmail)\n      .update({\n        canvasUse: firebase.firestore.FieldValue.arrayUnion(canvasId),\n      });\n  };\n\n  const handleShareUse = () => {\n    shareCanvasUse(shareInputUse);\n    setShareInputUse(\"\");\n    setShareInputObserve(\"\");\n    shareBoxNon();\n  };\n  const shareCanvasObserve = (observerEmail) => {\n    let canvasId = window.location.pathname.split(\"/\")[2];\n\n    db.collection(\"canvases\")\n      .doc(canvasId)\n      .update({\n        observer: firebase.firestore.FieldValue.arrayUnion(observerEmail),\n      });\n    db.collection(\"users\")\n      .doc(observerEmail)\n      .update({\n        canvasObserve: firebase.firestore.FieldValue.arrayUnion(canvasId),\n      });\n  };\n\n  const handleShareObserve = () => {\n    shareCanvasObserve(shareInputObserve);\n    setShareInputUse(\"\");\n    setShareInputObserve(\"\");\n    shareBoxNon();\n  };\n  const shareBoxNon = () => {\n    document.querySelector(\"#darkBack\").className = \"scaleOut\";\n    setTimeout(() => {\n      document.querySelector(\"#darkBack\").style.display = \"none\";\n      document.querySelector(\"#dark\").style.display = \"none\";\n    }, 300);\n  };\n\n  return (\n    <div>\n      <div id=\"container\">\n        <LeftBar canvas={canvas} name={name} />\n        {/* <div id=\"leftside\">\n        <div id=\"addShapesCon\">\n        <AddShapes canvas={canvas} id=\"addShapes\" />\n        </div>\n        <div id=\"toolcontent\"></div>\n      </div> */}\n        <div id=\"rightside\">\n          <div id=\"top_bar\">\n            <ToolBar canvas={canvas} name={name} />\n            {/* <div>\n            <label>背景顏色：</label>\n            <input\n              onChange={changeCanvasColor}\n              type=\"color\"\n              id=\"lineColorInput\"\n              value={canvasColor}\n            />\n          </div> */}\n          </div>\n          {/* <button onClick={addCircle}>circle test</button>\n        <button onClick={addEllipse}>ellipse test</button>\n        <button onClick={copy}>copy test</button>\n        <button onClick={paste}>paste test</button> */}\n          <div id=\"canvas_area\">\n            {/* <h1>BIBen</h1>\n      <label>What's the name of your project</label>\n      <input value={name} onChange={handleInputName} /> */}\n\n            {/* <RectAdjust canvas={canvas} /> */}\n\n            {/* <PaintingTool canvas={canvas} /> */}\n            {/* <SaveAndLoad canvas={canvas} name={name} /> */}\n\n            {/* <button onClick={crayon}>Crayon</button>\n      <button onClick={Ink}>Ink</button>\n      <button onClick={Marker}>Marker</button> */}\n\n            {/* <button>Sigma</button>\n      <button>Sin</button> */}\n\n            {/* <div>\n          <select id=\"brushSelect\" onChange={selectBrush}>\n            <option value=\"Pencil\">Pencil</option>\n            <option value=\"Circle\">Circle</option>\n            <option value=\"Spray\">Spray</option>\n            <option value=\"Square\">Square</option>\n          </select>\n        </div> */}\n\n            {/* <TextAdjust canvas={canvas} /> */}\n\n            <canvas\n              id=\"canvas\"\n              // onMouseDown={mousedown}\n              // onMouseMove={mousemove}\n              // onMouseUp={mouseup}\n              // onMouseLeave={mouseleave}\n            />\n            <ChatRoom author={author} />\n          </div>\n        </div>\n      </div>\n      <div id=\"dark\" />\n      <div id=\"darkBack\" style={{ display: \"none\" }} className=\"scaleIn\">\n        <div id=\"shareBoxOuter\">\n          <div id=\"profileShareBox\">\n            <div id=\"profileCancelBox\">\n              <Cancel\n                id=\"cancelOutShare\"\n                onClick={shareBoxNon}\n                className=\"bigger\"\n              />\n            </div>\n            <div id=\"shareInputBox\">\n              <div className=\"shareWayBox\">\n                <div className=\"h1\">Share to co-worker</div>\n                <div>invite others to co-work </div>\n                <div> (the one you invited can edit the board)</div>\n                <Cowork className=\"shareImg\" />\n                <div className=\"shareBtnBox\">\n                  <input\n                    className=\"shareInput\"\n                    value={shareInputUse}\n                    placeholder=\"Please enter an Email\"\n                    onChange={(e) => {\n                      setShareInputUse(e.target.value);\n                    }}\n                  />\n                  <div onClick={handleShareUse} className=\"shareBtn\">\n                    share\n                  </div>\n                </div>\n              </div>\n              <div className=\"shareWayBox\">\n                <div className=\"h1\">Share to student</div>\n                <div>invite others to read </div>\n                <div>(the one you invited can read only)</div>\n                <Learn className=\"shareImg\" />\n                <div className=\"shareBtnBox\">\n                  <input\n                    className=\"shareInput\"\n                    value={shareInputObserve}\n                    placeholder=\"Please enter an Email\"\n                    onChange={(e) => {\n                      setShareInputObserve(e.target.value);\n                    }}\n                  />\n                  <div onClick={handleShareObserve} className=\"shareBtn\">\n                    share\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n",["126","127"],"/Users/dragonlonss/biben/src/components/AddShapes.js",["128","129","130","131","132","133","134","135","136","137","138","139","140","141","142"],"import React, { useState, useEffect } from \"react\";\nimport { fabric } from \"fabric\";\nimport firebase from \"firebase\";\nimport ellipse from \"../Img/addshapes/LogoMakr-9rD1kw.png\";\nimport circle from \"../Img/addshapes/LogoMakr-00Rh5a.png\";\nimport triangle from \"../Img/addshapes/LogoMakr-4keFSv.png\";\nimport isotri from \"../Img/addshapes/LogoMakr-101qmV.png\";\nimport parra from \"../Img/addshapes/LogoMakr-0mlYb5.png\";\nimport line from \"../Img/addshapes/LogoMakr-7xibzp.png\";\nimport righttriangle from \"../Img/addshapes/LogoMakr-6YA1tz.png\";\nimport square from \"../Img/addshapes/LogoMakr-60BBJ5.png\";\nimport textbox from \"../Img/addshapes/LogoMakr-26YKdq.png\";\nimport RectAdjust from \"./RectAdjust\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { updateToCloud } from \"../App.js\";\n//Rect\n\nexport default function AddShapes(props) {\n  let canvas = props.canvas;\n  const [strokeColor, setStrokeColor] = useState(\"#000000\");\n  const [fillColor, setFillColor] = useState(\"#ffffff\");\n  const [strokeWidthInput, setStrokeWidthInput] = useState(\"2\");\n  const [opacityInput, setOpacityInput] = useState(\"100\");\n  const [author, setAuthor] = useState(\"\");\n  // const [count, setCount] = useState(0);\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        // User is signed in.\n        setAuthor(user.email);\n        // console.log(user.email);\n      }\n    });\n  }, []);\n\n  // console.log(props);\n\n  const addRect = (canvas) => {\n    const rect = new fabric.Rect({\n      height: 100,\n      width: 100,\n      strokeWidth: parseFloat(parseFloat(strokeWidthInput)),\n      stroke: strokeColor,\n      fill: fillColor,\n      owner: \"owner\",\n    });\n\n    // rect.toObject = (function (toObject) {\n    //   return function (propertiesToInclude) {\n    //     return fabric.util.object.extend(\n    //       toObject.call(this, propertiesToInclude),\n    //       {\n    //         id: count,\n    //         author: author, //my custom property\n    //         // _controlsVisibility: this._getControlsVisibility(), //i want to get the controllsVisibility\n    //       }\n    //     );\n    //   };\n    // })(rect.toObject);\n    // var addedcount = count + 1;\n    // setCount(addedcount);\n    canvas.add(rect);\n    // canvas.setActiveObject(rect);\n    updateToCloud(canvas);\n    canvas.renderAll();\n    // canvas.fire(\"object:modified\");\n    // console.log\n  };\n  //Circle\n  const addCircle = (canvas) => {\n    const circle = new fabric.Circle({\n      // id: uuidv4(),\n      radius: 50,\n      top: 50,\n      left: 50,\n      strokeWidth: parseFloat(strokeWidthInput),\n      stroke: strokeColor,\n      fill: fillColor,\n    });\n    // circle.toObject = (function (toObject) {\n    //   return function (propertiesToInclude) {\n    //     return fabric.util.object.extend(\n    //       toObject.call(this, propertiesToInclude),\n    //       {\n    //         id: count,\n    //         author: author, //my custom property\n    //         // _controlsVisibility: this._getControlsVisibility(), //i want to get the controllsVisibility\n    //       }\n    //     );\n    //   };\n    // })(circle.toObject);\n    canvas.add(circle);\n    updateToCloud(canvas);\n    // canvas.setActiveObject(circle);\n    // canvas.fire(\"object:modified\");\n    canvas.renderAll();\n    // var addedcount = count + 1;\n    // setCount(addedcount);\n\n    console.log(circle);\n  };\n  //Textbox IText\n  const addTextbox = (canvas) => {\n    const Textbox = new fabric.Textbox(\"please fill in\", {\n      top: 50,\n      left: 50,\n      // strokeWidth: parseFloat(strokeWidthInput),\n      // stroke: strokeColor,\n      fill: fillColor,\n      width: 200,\n      fontSize: 16,\n      // fontWeight: 200,\n      editingBorderColor: \"blue\",\n    });\n    canvas.add(Textbox);\n    canvas.renderAll();\n  };\n  //Triangle\n  const addTriangle = (canvas) => {\n    const Triangle = new fabric.Triangle({\n      top: 50,\n      left: 50,\n      strokeWidth: parseFloat(strokeWidthInput),\n      stroke: strokeColor,\n      fill: fillColor,\n      width: 100,\n      height: 100,\n    });\n    canvas.add(Triangle);\n    canvas.renderAll();\n    updateToCloud(canvas);\n  };\n  //Line\n  const addLine = (canvas) => {\n    const Line = new fabric.Line([50, 100, 200, 200], {\n      top: 50,\n      left: 50,\n      strokeWidth: parseFloat(strokeWidthInput),\n      stroke: strokeColor,\n    });\n    canvas.add(Line);\n    canvas.renderAll();\n    updateToCloud(canvas);\n  };\n  //Ellipse\n  const addEllipse = (canvas) => {\n    const Ellipse = new fabric.Ellipse({\n      top: 60,\n      left: 60,\n      strokeWidth: parseFloat(strokeWidthInput),\n      stroke: strokeColor,\n      fill: fillColor,\n      radius: 30,\n      rx: 60,\n      ry: 40,\n    });\n    canvas.add(Ellipse);\n    canvas.renderAll();\n    updateToCloud(canvas);\n  };\n  //RightTriangle\n  const addRightTriangle = (canvas) => {\n    const RightTriangle = new fabric.Polygon(\n      [\n        { x: 50, y: 0 },\n        { x: 50, y: 100 },\n        { x: 100, y: 100 },\n      ],\n      {\n        top: 100,\n        left: 100,\n        strokeWidth: parseFloat(strokeWidthInput),\n        stroke: strokeColor,\n        fill: fillColor,\n      }\n    );\n    canvas.add(RightTriangle);\n    canvas.renderAll();\n    updateToCloud(canvas);\n  };\n  //IsoscelesTriangle\n  const addIsoscelesTriangle = (canvas) => {\n    const IsoscelesTriangle = new fabric.Polygon(\n      [\n        { x: 100, y: 0 },\n        { x: 200, y: 100 },\n        { x: 0, y: 100 },\n      ],\n      {\n        top: 100,\n        left: 100,\n        strokeWidth: parseFloat(strokeWidthInput),\n        stroke: strokeColor,\n        fill: fillColor,\n      }\n    );\n    canvas.add(IsoscelesTriangle);\n    canvas.renderAll();\n    updateToCloud(canvas);\n  };\n  //Parallelogram\n  const addParallelogram = (canvas) => {\n    const Parallelogram = new fabric.Polygon(\n      [\n        { x: 50, y: 0 },\n        { x: 80, y: 100 },\n        { x: 150, y: 100 },\n        { x: 120, y: 0 },\n      ],\n      {\n        top: 100,\n        left: 100,\n        strokeWidth: parseFloat(strokeWidthInput),\n        stroke: strokeColor,\n        fill: fillColor,\n      }\n    );\n    canvas.add(Parallelogram);\n    canvas.renderAll();\n    updateToCloud(canvas);\n  };\n  //freeDrawing\n  const freeDwawing = (canvas) => {\n    canvas.isDrawingMode = true;\n  };\n  // spray\n  const Spray = () => {\n    canvas.freeDrawingBrush = new fabric.SprayBrush(canvas, {\n      // width: 70,\n      opacity: 0.6,\n      // color: \"#ff0000\",\n    });\n  };\n  //stopDrawing\n  const stopDwawing = (canvas) => {\n    canvas.isDrawingMode = false;\n    if (canvas.getActiveObject()) {\n      console.log(canvas.getActiveObject().type);\n    }\n    // console.log(canvi.getActiveObject().fontStyle);\n  };\n\n  return (\n    <div id=\"addShapes\">\n      {/* <div onClick={cancel}>X</div> */}\n      <div id=\"imgBox\">\n        <img\n          src={square}\n          onClick={() => addRect(canvas)}\n          className=\"shapeIcon\"\n        />\n        <img\n          src={circle}\n          onClick={() => addCircle(canvas)}\n          className=\"shapeIcon\"\n        />\n\n        <img\n          src={triangle}\n          onClick={() => addTriangle(canvas)}\n          className=\"shapeIcon\"\n        />\n        <img\n          src={ellipse}\n          onClick={() => addEllipse(canvas)}\n          className=\"shapeIcon\"\n        />\n        <img\n          src={righttriangle}\n          onClick={() => addRightTriangle(canvas)}\n          className=\"shapeIcon\"\n        />\n        <img\n          src={isotri}\n          onClick={() => addIsoscelesTriangle(canvas)}\n          className=\"shapeIcon\"\n        />\n        <img\n          src={parra}\n          onClick={() => addParallelogram(canvas)}\n          className=\"shapeIcon\"\n        />\n        <img src={line} onClick={() => addLine(canvas)} className=\"shapeIcon\" />\n      </div>\n      <RectAdjust\n        canvas={canvas}\n        strokeColor={strokeColor}\n        fillColor={fillColor}\n        strokeWidthInput={strokeWidthInput}\n        opacityInput={opacityInput}\n        setStrokeColor={(v) => {\n          setStrokeColor(v);\n        }}\n        setFillColor={(v) => {\n          setFillColor(v);\n        }}\n        setStrokeWidthInput={(v) => {\n          setStrokeWidthInput(v);\n        }}\n        setOpacityInput={(v) => {\n          setOpacityInput(v);\n        }}\n      />\n      {/* <button onClick={() => addRect(canvas)}>Rectangle</button>\n      <button onClick={() => addCircle(canvas)}>Circle</button>\n      <button onClick={() => addTextbox(canvas)}>Textbox</button>\n      <button onClick={() => addTriangle(canvas)}>Triangle</button>\n      <button onClick={() => addLine(canvas)}>Line</button>\n      <button onClick={() => addEllipse(canvas)}>Ellipse</button>\n      <button onClick={() => addRightTriangle(canvas)}>Right Triangle</button>\n      <button onClick={() => addIsoscelesTriangle(canvas)}>\n        Isosceles Triangle\n      </button>\n      <button onClick={() => addParallelogram(canvas)}>Parallelogram</button>\n      <button onClick={() => freeDwawing(canvas)}>Draw</button>\n */}\n    </div>\n  );\n}\n","/Users/dragonlonss/biben/src/components/LeftBar.js",["143","144","145","146","147","148","149","150","151","152","153","154","155"],"/Users/dragonlonss/biben/src/components/ToolBar.js",["156","157","158","159","160","161","162"],"import React, { useState } from \"react\";\nimport { fabric } from \"fabric\";\nimport \"fabric-history\";\nimport firebase from \"firebase\";\nimport { ReactComponent as Eraser } from \"../Img/toolbar/eraser.svg\";\nimport { ReactComponent as Copy } from \"../Img/toolbar/file.svg\";\nimport { ReactComponent as Paste } from \"../Img/toolbar/paste.svg\";\nimport { ReactComponent as Cut } from \"../Img/toolbar/scissors.svg\";\nimport { ReactComponent as Undo } from \"../Img/toolbar/undo-button.svg\";\nimport { ReactComponent as Redo } from \"../Img/toolbar/redo-button.svg\";\nimport { ReactComponent as SelectAll } from \"../Img/toolbar/select-all.svg\";\nimport { ReactComponent as DeleteAll } from \"../Img/toolbar/trash.svg\";\nimport { ReactComponent as Group } from \"../Img/toolbar/close.svg\";\nimport { ReactComponent as Ungroup } from \"../Img/toolbar/open.svg\";\nimport { ReactComponent as LayerUp } from \"../Img/toolbar/gotop.svg\";\nimport { ReactComponent as LayerDown } from \"../Img/toolbar/goBottom.svg\";\nimport \"./Toolbar.scss\";\nimport { updateToCloud } from \"../App.js\";\nexport default function ToolBar(props) {\n  const db = firebase.firestore();\n  const name = props.name;\n  const canvas = props.canvas;\n  const [canvasColor, setCanvasColor] = useState(\"#ffffff\");\n  var ctrlDown = false,\n    ctrlKey = 17,\n    cmdKeyL = 91,\n    cmdKeyR = 93,\n    delKey = 8,\n    vKey = 86,\n    xKey = 88,\n    cKey = 67,\n    aKey = 65;\n  onkeydown = (e) => {\n    // console.log(e.keyCode);\n\n    if (\n      e.keyCode === ctrlKey ||\n      e.keyCode === cmdKeyL ||\n      e.keyCode === cmdKeyR\n    ) {\n      ctrlDown = true;\n    }\n\n    if (ctrlDown && e.keyCode === cKey) {\n      copy(canvas);\n    }\n    if (ctrlDown && e.keyCode === xKey) {\n      cut(canvas);\n    }\n    if (ctrlDown && e.keyCode === vKey) {\n      paste(canvas);\n    }\n    if (ctrlDown && e.keyCode === aKey) {\n      e.preventDefault();\n      selectAll(canvas);\n    }\n    if (e.keyCode === delKey) {\n      if (canvas.getActiveObject() && !canvas.getActiveObject().isEditing) {\n        deleteChosen(canvas);\n      }\n    }\n  };\n  onkeyup = (e) => {\n    if (\n      e.keyCode === ctrlKey ||\n      e.keyCode === cmdKeyL ||\n      e.keyCode === cmdKeyR\n    ) {\n      ctrlDown = false;\n    }\n  };\n  //group\n  const group = () => {\n    canvas.offHistory();\n    if (!canvas.getActiveObject()) {\n      return;\n    }\n    if (canvas.getActiveObject().type !== \"activeSelection\") {\n      return;\n    }\n    canvas.getActiveObject().toGroup();\n\n    canvas.fire(\"object:modified\");\n    canvas.renderAll();\n    // updateToCloud(canvas);\n\n    // canvas.onHistory();\n  };\n  //ungroup\n  const ungroup = (canvi) => {\n    canvas.offHistory();\n    if (!canvas.getActiveObject()) {\n      return;\n    }\n    if (canvas.getActiveObject().type !== \"group\") {\n      return;\n    }\n    canvi.getActiveObject().toActiveSelection();\n    canvi.renderAll();\n    // updateToCloud(canvas);\n    canvas.fire(\"object:modified\");\n    // canvas.onHistory();\n  };\n  //deleteChosen\n  const deleteChosen = (canvi) => {\n    // canvi.remove(canvi.getActiveObject());\n    var doomedObj = canvi.getActiveObject();\n    if (doomedObj.type === \"activeSelection\") {\n      // active selection needs a reference to the canvi.\n      doomedObj.canvi = canvi;\n      doomedObj.forEachObject(function (obj) {\n        canvi.remove(obj);\n      });\n    } //endif multiple objects\n    else {\n      //If single object, then delete it\n      var activeObject = canvi.getActiveObject();\n      //How to delete multiple objects?\n      //if(activeObject !== null && activeObject.type === 'rectangle') {\n      if (activeObject !== null) {\n        canvi.remove(activeObject);\n      }\n    } //\n    canvi.discardActiveObject();\n    canvi.renderAll();\n    updateToCloud(canvas);\n    // canvas.fire(\"object:modified\");\n  };\n  //deleteAll\n  const deleteAll = (canvi) => {\n    canvi.remove(...canvi.getObjects());\n    canvi.discardActiveObject();\n    canvi.renderAll();\n  };\n\n  //selectAll\n  const selectAll = (canvas) => {\n    canvas.discardActiveObject();\n    var sel = new fabric.ActiveSelection(canvas.getObjects(), {\n      canvas: canvas,\n    });\n    canvas.setActiveObject(sel);\n    canvas.requestRenderAll();\n  };\n  var clipboard = null;\n  //cut\n  const cut = (canvas) => {\n    if (canvas.getActiveObject() === null) {\n      return;\n    }\n    canvas.getActiveObject().clone(function (cloned) {\n      clipboard = cloned;\n      //remove after cloned to clipboard\n      canvas.remove(canvas.getActiveObject());\n      updateToCloud(canvas);\n      // canvas.fire(\"object:modified\");\n    });\n    // console.log(clipboard);\n  };\n  //copy\n  const copy = () => {\n    canvas.getActiveObject().clone(function (cloned) {\n      clipboard = cloned;\n    });\n  };\n  //paste\n  const paste = (canvas) => {\n    // canvas.offHistory();\n    clipboard.clone(function (clonedObj) {\n      canvas.discardActiveObject();\n      clonedObj.set({\n        left: clonedObj.left + 10,\n        top: clonedObj.top + 10,\n        evented: true,\n      });\n      if (clonedObj.type === \"activeSelection\") {\n        // active selection needs a reference to the canvas.\n        clonedObj.canvas = canvas;\n        clonedObj.forEachObject(function (obj) {\n          canvas.add(obj);\n        });\n        // this should solve the unselectability\n        clonedObj.setCoords();\n      } else {\n        canvas.add(clonedObj);\n      }\n      clipboard.top += 10;\n      clipboard.left += 10;\n      canvas.setActiveObject(clonedObj);\n      canvas.requestRenderAll();\n      updateToCloud(canvas);\n      // canvas.fire(\"object:modified\");\n    });\n  };\n  //undo\n  function doUndo() {\n    // canvas.undo();\n    canvas.undo();\n    updateToCloud(canvas);\n\n    // canvas.fire(\"object:modified\");\n    // let undoArr = [];\n    // let redoArr = [];\n    // db.collection(\"undoRedo\")\n    //   .doc(window.location.pathname.split(\"/\")[2])\n    //   .get()\n    //   .then((data) => {\n    //     if (data.data().undo.length !== 0) {\n    //       undoArr = data.data().undo;\n    //       redoArr = data.data().redo;\n    //       let newCan = undoArr.pop();\n    //       redoArr.push(newCan);\n    //       if (redoArr.length > 5) {\n    //         redoArr.shift();\n    //       }\n    //       db.collection(\"undoRedo\")\n    //         .doc(window.location.pathname.split(\"/\")[2])\n    //         .update({\n    //           undo: undoArr,\n    //           redo: redoArr,\n    //         });\n    //       db.collection(\"canvases\")\n    //         .doc(window.location.pathname.split(\"/\")[2])\n    //         .update({\n    //           data: newCan,\n    //         });\n    //     }\n    //   });\n  }\n  //redo\n  function doRedo() {\n    // canvas.redo();\n    canvas.redo();\n    updateToCloud(canvas);\n    // canvas.fire(\"object:modified\");\n  }\n  const bringForward = (canvas) => {\n    // canvas.offHistory();\n\n    canvas.getActiveObject().bringForward();\n    // updateToCloud(canvas);\n    canvas.fire(\"object:modified\");\n  };\n\n  const sendBackwards = (canvas) => {\n    // canvas.offHistory();\n\n    canvas.getActiveObject().sendBackwards();\n    // updateToCloud(canvas);\n    canvas.fire(\"object:modified\");\n  };\n\n  //canvascolor\n  const changeCanvasColor = (e) => {\n    canvas.backgroundColor = e.target.value;\n    setCanvasColor(e.target.value);\n    canvas.renderAll();\n    canvas.fire(\"object:modified\");\n  };\n\n  // //share\n  // const shareCanvas = (observerEmail) => {\n  //   let canvasId = window.location.pathname.split(\"/\")[2];\n  //   var db = firebase.firestore();\n  //   db.collection(\"canvases\")\n  //     .doc(canvasId)\n  //     .update({\n  //       observer: firebase.firestore.FieldValue.arrayUnion(observerEmail),\n  //     });\n  //   db.collection(\"users\")\n  //     .doc(observerEmail)\n  //     .update({\n  //       canvasRead: firebase.firestore.FieldValue.arrayUnion(canvasId),\n  //     });\n  // };\n\n  // const showShare = () => {\n  //   document.querySelector(\"#shareInputBox\").style.display === \"block\"\n  //     ? (document.querySelector(\"#shareInputBox\").style.display = \"none\")\n  //     : (document.querySelector(\"#shareInputBox\").style.display = \"block\");\n  // };\n\n  // const handleShare = () => {\n  //   shareCanvas(shareInput);\n  //   setShareInput(\"\");\n  // };\n  const sharePagePop = () => {\n    document.querySelector(\"#darkBack\").className = \"scaleIn\";\n    document.querySelector(\"#darkBack\").style.display = \"flex\";\n    document.querySelector(\"#dark\").style.display = \"block\";\n  };\n  // const showShareBox = () => {\n  //   document.querySelector(\"#darkBack\").style.display = \"flex\";\n  //   document.querySelector(\"#dark\").style.display = \"block\";\n  // };\n  return (\n    <>\n      <div id=\"toolBarBox\">\n        <div id=\"toolBarName\">\n          <div style={{ display: \"block\" }}>{name}</div>\n        </div>\n        <div>\n          <div className=\"toolBarIconBox blue\">\n            <Undo onClick={() => doUndo()} className=\"toolBarIcon\" />\n          </div>\n          <div className=\"toolBarIconBox blue\">\n            <Redo onClick={() => doRedo()} className=\"toolBarIcon\" />\n          </div>\n        </div>\n        <div>\n          <div className=\"toolBarIconBox orange\">\n            <Cut onClick={() => cut(canvas)} className=\"toolBarIcon\" />\n          </div>\n          <div className=\"toolBarIconBox orange\">\n            <Copy onClick={copy} className=\"toolBarIcon\" />\n          </div>\n          <div className=\"toolBarIconBox orange\">\n            <Paste onClick={() => paste(canvas)} className=\"toolBarIcon\" />\n          </div>\n        </div>\n        <div className=\"toolBarIconBox red\">\n          <Eraser\n            onClick={() => deleteChosen(canvas)}\n            className=\"toolBarIcon\"\n          />\n        </div>\n        <div>\n          <div className=\"toolBarIconBox green\">\n            <LayerUp\n              onClick={() => bringForward(canvas)}\n              className=\"toolBarIcon\"\n            />\n          </div>\n          <div className=\"toolBarIconBox green\">\n            <LayerDown\n              onClick={() => sendBackwards(canvas)}\n              className=\"toolBarIcon\"\n            />\n          </div>\n          {/* <div className=\"toolBarIconBox green\">\n            <Group onClick={group} className=\"toolBarIcon\" />\n          </div>\n          <div className=\"toolBarIconBox green\">\n            <Ungroup onClick={() => ungroup(canvas)} className=\"toolBarIcon\" />\n          </div> */}\n        </div>\n        <div className=\"toolBarIconBox \">\n          <SelectAll\n            onClick={() => selectAll(canvas)}\n            className=\"toolBarIcon selectAll\"\n          />\n        </div>\n\n        <div id=\"shareBox\" onClick={sharePagePop}>\n          share\n        </div>\n        {/* <div id=\"shareInputBox\" style={{ display: \"none\" }}> */}\n        {/* <input\n            value={shareInput}\n            onChange={(e) => {\n              setShareInput(e.target.value);\n            }}\n          />\n          <button onClick={handleShare}>share</button> */}\n        {/* </div> */}\n\n        {/* <DeleteAll onClick={() => deleteAll(canvas)}/> */}\n      </div>\n      <div id=\"boardColor\">\n        <label>board's color：</label>\n        <input\n          onChange={changeCanvasColor}\n          type=\"color\"\n          id=\"lineColorInput\"\n          value={canvasColor}\n        />\n      </div>\n    </>\n  );\n}\n","/Users/dragonlonss/biben/src/homepage.js",["163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186"],"import React, { useState, useEffect, useRef } from \"react\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ReactComponent as Cancel } from \"./Img/back/cancel.svg\";\nimport logo from \"./Img/icon13.svg\";\nimport corner from \"./Img/back/corner.png\";\nimport row from \"./Img/back/row.png\";\nimport colum from \"./Img/back/colum.png\";\nimport aa from \"./Img/back/aa-07.png\";\nimport triangle from \"./Img/back/triangle.svg\";\nimport compass from \"./Img/back/compass.svg\";\nimport eraser from \"./Img/back/eraser2.svg\";\nimport sigma from \"./Img/back/sigma.svg\";\nimport fbLogo from \"./Img/f_logo.svg\";\nimport { ReactComponent as GoogleLogo } from \"./Img/google-icon.svg\";\nimport bottom from \"./Img/back/bottom-02.svg\";\nimport man from \"./Img/back/undraw_professor.svg\";\nimport triangleR from \"./Img/back/triangle-ruler.svg\";\nimport penDraw from \"./Img/back/fountain-pen.svg\";\nimport chat from \"./Img/back/chat-02.svg\";\nimport audi from \"./Img/back/audience.svg\";\nimport Try_It from \"./components/Try_It.js\";\n\n// import FirebaseRead from \"./firebase\";\nimport {\n  signInWithGoogle,\n  signInWithFB,\n  signOut,\n  // firebaseTest,\n  // firebaseGet,\n} from \"./firebase\";\nimport SignInLocal from \"./components/SignIn\";\nimport SignUpLocal from \"./components/SignUp\";\nimport firebase from \"firebase\";\nimport firebaseConfig from \"./firebaseConfig\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./homepage.scss\";\n// import { Router, Route, Link } from 'react-router'\n\nexport default function HomePage() {\n  let history = useHistory();\n  const showLoginStatus = () => {\n    document.querySelector(\"#logcontent\").style.display = \"block\";\n    document.querySelector(\"#signUpBox\").style.display = \"none\";\n  };\n  const showSignUpStatus = () => {\n    document.querySelector(\"#logcontent\").style.display = \"none\";\n    document.querySelector(\"#signUpBox\").style.display = \"block\";\n  };\n\n  // const app = firebase.apps.length\n  //   ? firebase.app()\n  //   : firebase.initializeApp(firebaseConfig);\n  firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      // console.log(user.email);\n      // console.log(user.photoURL);\n      history.push(\"/profile\");\n    } else {\n      // No user is signed in.\n      // document.querySelector(\"#status\").innerHTML = \"未登入，請點以下登入方式\";\n    }\n  });\n\n  // const firebaseSnap = () => {\n  //   const app = firebase.apps.length\n  //     ? firebase.app()\n  //     : firebase.initializeApp(firebaseConfig);\n  //   var db = firebase.firestore();\n  //   db.collection(\"canvases\")\n  //     .doc(\"Test\")\n  //     .onSnapshot((querySnapshot) => {\n  //       console.log(querySnapshot.data().data);\n  //     });\n  // };\n\n  const loginBoxNon = () => {\n    document.querySelector(\"#darkBack\").className = \"scaleOut\";\n    setTimeout(() => {\n      document.querySelector(\"#darkBack\").style.display = \"none\";\n      document.querySelector(\"#dark\").style.display = \"none\";\n    }, 300);\n  };\n\n  const showLoginBox = () => {\n    document.querySelector(\"#darkBack\").className = \"scaleIn\";\n    document.querySelector(\"#darkBack\").style.display = \"flex\";\n    document.querySelector(\"#dark\").style.display = \"block\";\n    showLoginStatus();\n  };\n  const onScroll = (e) => {\n    let obj = document.querySelector(\".topNavBox\");\n    if (e.target.scrollTop > 30) {\n      obj.style.marginTop = \"0px\";\n      obj.style.paddingTop = \"30px\";\n      // obj.style.width = \"100%\";\n      // obj.style.left = \"0%\";\n      obj.className = \"topNavBox floatingNav\";\n    } else {\n      obj.style.marginTop = \"30px\";\n      obj.style.paddingTop = \"0px\";\n      obj.className = \"topNavBox\";\n    }\n  };\n  const showSignBox = () => {\n    showLoginBox();\n    showSignUpStatus();\n  };\n  return (\n    <div id=\"homePage\" onScroll={onScroll}>\n      <div id=\"ahome\">\n        <div className=\"topNavBox\">\n          <div className=\"topNav\">\n            <div className=\"mainLogo\">\n              <img src={logo} className=\"logo\" />\n              <div>BAIBEN</div>\n            </div>\n            <div className=\"logInWay\">\n              <div className=\"bigger\" onClick={showLoginBox}>\n                log In\n              </div>\n              <div className=\"bigger\" onClick={showSignBox}>\n                Sign Up\n              </div>\n            </div>\n          </div>\n        </div>\n        <div id=\"mainContain\">\n          <div id=\"homePageLeft\">\n            <div id=\"BigAtt\">BAIBEN</div>\n            {/* <div>The best online board you'll ever have!</div> */}\n            <div id=\"middleAtt\">Sharing ideas from NOW!</div>\n\n            <div id=\"startBtnBox\">\n              <div id=\"startBtn\" onClick={showLoginBox} className=\"bigger\">\n                start now for free\n              </div>\n            </div>\n          </div>\n          <div id=\"homePageRight\">\n            <img src={man} />\n          </div>\n        </div>\n        {/* <img src={bottom} id=\"bottomBar\" /> */}\n        {/* <div id=\"HcanvasBox\">\n          something cool~\n          <canvas id=\"Hcanvas\"></canvas>\n        </div> */}\n        {/* <img src={triangle} className=\"homePageImage triangle\" /> */}\n        {/* <img src={compass} className=\"homePageImage compass\" /> */}\n        <img src={eraser} className=\"homePageImage eraser\" />\n        {/* <img src={sigma} className=\"homePageImage sigma\" /> */}\n      </div>\n      {/* <img src={bottom} id=\"bottomBar\" /> */}\n      <div id=\"introduction\">\n        <div id=\"howeWhy\">What can we do with BAIBEN?</div>\n        <div id=\"circleBox\">\n          <div className=\"homePageCircle\">\n            <img src={triangleR} />\n            <div>Pattern</div>\n          </div>\n          <div className=\"homePageCircle\">\n            <img src={penDraw} />\n            <div>Drawing</div>\n          </div>\n          <div className=\"homePageCircle\">\n            <img src={audi} />\n            <div>Cowork</div>\n          </div>\n          <div className=\"homePageCircle\">\n            <img src={chat} />\n            <div>Communicate</div>\n          </div>\n        </div>\n        <div id=\"howeWhy\">Try it now! </div>\n        <Try_It />\n      </div>\n      <div className=\"footer\">\n        <div>&copy; 2020 BAIBEN All rights reserved.</div>\n      </div>\n      <div id=\"dark\" />\n      <div id=\"darkBack\" className=\"scaleIn\">\n        <div id=\"loginBoxOuter\">\n          <div id=\"logInBox\">\n            <Cancel id=\"cancelOut\" onClick={loginBoxNon} className=\"bigger\" />\n            <div id=\"logoBox\">\n              <img src={logo} className=\"logo\" />\n            </div>\n            <div id=\"title\">Welcome to BAIBEN!</div>\n            <div id=\"logcontent\">\n              <SignInLocal />\n              <div id=\"or\">Or</div>\n              <div\n                id=\"googleLogin\"\n                onClick={signInWithGoogle}\n                className=\"bigger\"\n              >\n                <GoogleLogo style={{ width: 20, height: 20 }} />\n                Log In with Google\n              </div>\n\n              <div id=\"FBcenter\" onClick={signInWithFB} className=\"bigger\">\n                <img src={fbLogo} style={{ width: 20, height: 20 }} />\n                Log In with FaceBook\n              </div>\n              <label>First Time visiting?</label>\n              <div id=\"signUpbut\" onClick={showSignUpStatus} className=\"bigger\">\n                create an free account\n              </div>\n            </div>\n            <div id=\"signUpBox\" className=\"hiddenStatus\">\n              <SignUpLocal id=\"signUpLocal\" />\n              <div id=\"tryAn\">Or try another way to log in?</div>\n              <div id=\"anotherLogin\" onClick={showLoginStatus}>\n                Login with other ways\n              </div>\n            </div>\n            <div id=\"policy\">\n              {/* 繼續使用即代表你同意 BIBen 的 《隱私權政策》。 */}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n",["187","188"],"/Users/dragonlonss/biben/src/components/SignIn.js",["189","190"],"/Users/dragonlonss/biben/src/components/SignUp.js",["191","192"],"/Users/dragonlonss/biben/src/components/RectAdjust.js",["193","194","195","196","197","198"],"import React, { useState } from \"react\";\nimport fillColorImg from \"../Img/addshapes/adjust/fillcolor.svg\";\nimport strokeColorImg from \"../Img/addshapes/adjust/strokeColor.svg\";\nimport width from \"../Img/addshapes/adjust/width.svg\";\nimport { ReactComponent as StrokeColorImg } from \"../Img/addshapes/adjust/strokeColor.svg\";\n\n// import { fabric } from \"fabric\";\nexport default function RectAdjust(props) {\n  const canvas = props.canvas;\n  const strokeColor = props.strokeColor;\n  const fillColor = props.fillColor;\n  const strokeWidthInput = props.strokeWidthInput;\n  const opacityInput = props.opacityInput;\n  const setStrokeColor = (v) => {\n    canvas.fire(\"object:modified\");\n    props.setStrokeColor(v);\n  };\n  const setFillColor = (v) => {\n    props.setFillColor(v);\n    canvas.fire(\"object:modified\");\n  };\n  const setStrokeWidthInput = (v) => {\n    props.setStrokeWidthInput(v);\n    canvas.fire(\"object:modified\");\n  };\n  const setOpacityInput = (v) => {\n    props.setOpacityInput(v);\n    canvas.fire(\"object:modified\");\n  };\n  //changeStrokeColor\n  const changeStrokeColor = (e) => {\n    if (canvas.getActiveObject()) {\n      canvas.getActiveObject().set(\"stroke\", e.target.value);\n    }\n    setStrokeColor(e.target.value);\n    canvas.renderAll();\n  };\n\n  //changeFillColor\n  const changeFillColor = (e) => {\n    if (canvas.getActiveObject()) {\n      canvas.getActiveObject().set(\"fill\", e.target.value);\n    }\n    setFillColor(e.target.value);\n    canvas.renderAll();\n  };\n\n  //changeStrokeWidth\n  const changeStrokeWidth = (e) => {\n    // let strokeWidthValue = document.querySelector(\"#strokeWidthValue\");\n    const newWidthOfS = parseInt(e.target.value, 10);\n    if (canvas.getActiveObject()) {\n      canvas.getActiveObject().set(\"strokeWidth\", newWidthOfS);\n    }\n    // strokeWidthValue.innerHTML = newWidthOfS;\n    setStrokeWidthInput(e.target.value);\n    canvas.renderAll();\n  };\n  //changeOpacityInput\n  const changeOpacityInput = (e) => {\n    const newWidthOfS = parseInt(e.target.value, 10) / 100;\n    if (canvas.getActiveObject()) {\n      canvas.getActiveObject().set(\"opacity\", newWidthOfS);\n    }\n    // strokeWidthValue.innerHTML = newWidthOfS;\n    setOpacityInput(e.target.value);\n    canvas.renderAll();\n  };\n  return (\n    <div>\n      <div className=\"colorChange\">\n        <div>fill color: </div>\n        {/* <img src={fillColorImg} style={{ width: 30 }} /> */}\n        <input\n          onChange={changeFillColor}\n          type=\"color\"\n          id=\"lineColorInput\"\n          value={fillColor}\n        />\n      </div>\n      <div className=\"colorChange\">\n        <div>\n          stroke color:\n          {/* <img src={strokeColorImg} style={{ width: 30 }} /> */}\n          {/* <StrokeColorImg style={{ width: 30, fill: \"#0E79B2\" }} /> */}\n        </div>\n        <input\n          onChange={changeStrokeColor}\n          type=\"color\"\n          id=\"lineColorInput\"\n          value={strokeColor}\n        />\n      </div>\n      <div className=\"widthChange\">\n        <label>stroke width: </label>\n        <img src={width} />\n        <input\n          onChange={changeStrokeWidth}\n          type=\"range\"\n          min=\"0\"\n          max=\"20\"\n          id=\"lineWidthInput\"\n          value={strokeWidthInput}\n        />\n      </div>\n      <div className=\"widthChange\">\n        <label>object opacity: </label>\n        <img src={width} />\n        <input\n          onChange={changeOpacityInput}\n          type=\"range\"\n          min=\"0\"\n          max=\"100\"\n          id=\"lineWidthInput\"\n          value={opacityInput}\n        />\n      </div>\n    </div>\n  );\n}\n",["199","200"],"/Users/dragonlonss/biben/src/reportWebVitals.js",[],["201","202"],"/Users/dragonlonss/biben/src/components/PaintingTool.js",["203","204","205","206","207","208"],"import React, { useState } from \"react\";\nimport { fabric } from \"fabric\";\nimport width from \"../Img/addshapes/adjust/width.svg\";\nimport pencil from \"../Img/addshapes/adjust/pencil.svg\";\nimport pen from \"../Img/addshapes/adjust/pen.svg\";\nimport highlighter from \"../Img/addshapes/adjust/highlighter.svg\";\nexport default function ToolBar(props) {\n  const [lineWidthInput, setLineWidthInput] = useState(\"1\");\n  const [lineColor, setLineColor] = useState(\"#000000\");\n\n  //   const lineColorInput = $(\"lineColorInput\");\n  const canvas = props.canvas;\n  function changeLineWidth(e) {\n    // console.log(e.target.value);\n    const newWidth = parseInt(e.target.value, 10) || 1;\n    canvas.freeDrawingBrush.width = newWidth;\n    setLineWidthInput(e.target.value);\n  }\n\n  function changeLineColor(e) {\n    canvas.freeDrawingBrush.color = e.target.value;\n    setLineColor(e.target.value);\n  }\n\n  // spray\n  const Spray = () => {\n    canvas.freeDrawingBrush = new fabric.SprayBrush(canvas, {\n      opacity: 0.6,\n      // color: \"#ff0000\",\n    });\n    canvas.freeDrawingBrush.color = lineColor;\n  };\n  //Pencil\n  const Pencil = () => {\n    canvas.freeDrawingBrush = new fabric.PencilBrush(canvas);\n    canvas.freeDrawingBrush.color = lineColor;\n  };\n  //Pen\n  const Pen = () => {\n    canvas.freeDrawingBrush = new fabric.PencilBrush(canvas);\n    canvas.freeDrawingBrush.color = lineColor;\n    canvas.freeDrawingBrush.width = 6;\n  };\n  //Highlighter\n  const Highlighter = () => {\n    canvas.freeDrawingBrush = new fabric.PencilBrush(canvas);\n    canvas.freeDrawingBrush.color = lineColor;\n    canvas.freeDrawingBrush.width = 30;\n  };\n  //stopDrawing\n  const stopDwawing = (canvas) => {\n    canvas.isDrawingMode = false;\n    props.closeContent();\n    if (canvas.getActiveObject()) {\n      console.log(canvas.getActiveObject().type);\n    }\n    // console.log(canvi.getActiveObject().fontStyle);\n  };\n  return (\n    <div>\n      <div className=\"paintWayBox\">\n        <div onClick={Pencil}>\n          <img src={pencil} style={{ width: 50 }} />\n        </div>\n        <div onClick={Pen}>\n          <img src={pen} style={{ width: 50 }} />\n        </div>\n        <div onClick={Highlighter}>\n          <img src={highlighter} style={{ width: 50 }} />\n        </div>\n      </div>\n      <div className=\"widthChange\">\n        <label>pen width: </label>\n        <img src={width} />\n        <input\n          onChange={changeLineWidth}\n          type=\"range\"\n          min=\"1\"\n          max=\"50\"\n          id=\"lineWidthInput\"\n          value={lineWidthInput}\n        />\n      </div>\n      <div className=\"colorChange\">\n        <div>pen color:</div>\n        <input\n          onChange={changeLineColor}\n          type=\"color\"\n          id=\"lineColorInput\"\n          value={lineColor}\n        />\n      </div>\n    </div>\n  );\n}\n",["209","210"],"/Users/dragonlonss/biben/src/components/SaveAndLoad.js",["211","212"],"/Users/dragonlonss/biben/src/components/TextAdjust.js",["213","214","215","216","217","218","219","220","221","222","223","224","225"],"import React, { useState } from \"react\";\nimport { fabric } from \"fabric\";\nimport width from \"../Img/addshapes/adjust/width.svg\";\nimport boldStyle from \"../Img/addshapes/adjust/handmade/bold-02.svg\";\nimport italicStyle from \"../Img/addshapes/adjust/handmade/italic-03.svg\";\nimport underLineStyle from \"../Img/addshapes/adjust/handmade/underLine-04.svg\";\nimport deleteLineStyle from \"../Img/addshapes/adjust/handmade/deleteLine-05.svg\";\nimport superStyle from \"../Img/addshapes/adjust/handmade/super-06.svg\";\nimport subStyle from \"../Img/addshapes/adjust/handmade/sub-07.svg\";\nimport normalStyle from \"../Img/addshapes/adjust/handmade/normal-08.svg\";\nimport alignLeftStyle from \"../Img/addshapes/adjust/align-left.svg\";\nimport alignCenterStyle from \"../Img/addshapes/adjust/align-center.svg\";\nimport alignRightStyle from \"../Img/addshapes/adjust/align-right.svg\";\nimport { updateToCloud } from \"../App.js\";\n\nexport default function TextAdjust(props) {\n  const canvas = props.canvas;\n  const [fontSizeInput, setFontSizeInput] = useState(\"16\");\n  const [textColor, setTextColor] = useState(\"#000000\");\n  const [textBackColor, setTextBackColor] = useState(\"#ffffff\");\n  const addTextbox = () => {\n    const Textbox = new fabric.Textbox(\"please fill in\", {\n      top: 50,\n      left: 50,\n      // strokeWidth: parseFloat(strokeWidthInput),\n      // stroke: strokeColor,\n      // fill: fillColor,\n      width: 200,\n      fontSize: 25,\n      // fontWeight: 200,\n      editingBorderColor: \"blue\",\n    });\n    canvas.add(Textbox);\n    canvas.renderAll();\n    updateToCloud(canvas);\n  };\n  const changeFontSize = (e) => {\n    if (!canvas.getActiveObject()) {\n      return;\n    }\n    if (canvas.getActiveObject().type === \"textbox\") {\n      canvas.getActiveObject().set(\"fontSize\", e.target.value);\n    }\n    setFontSizeInput(e.target.value);\n    canvas.renderAll();\n\n    canvas.fire(\"object:modified\");\n  };\n  const changeTextColor = (e) => {\n    if (canvas.getActiveObject().type === \"textbox\") {\n      canvas.getActiveObject().set(\"fill\", e.target.value);\n      setTextColor(e.target.value);\n      canvas.renderAll();\n      canvas.fire(\"object:modified\");\n    }\n  };\n  const changeTextBackColor = (e) => {\n    if (canvas.getActiveObject().type === \"textbox\") {\n      canvas.getActiveObject().set(\"textBackgroundColor\", e.target.value);\n      setTextBackColor(e.target.value);\n      canvas.renderAll();\n      canvas.fire(\"object:modified\");\n    }\n  };\n  const [rowHeightInput, setRowHeightInput] = useState(\"1\");\n  const changeRowHeight = (e) => {\n    const newRowHeight = parseInt(e.target.value, 10) / 10;\n    if (canvas.getActiveObject().type === \"textbox\") {\n      canvas.getActiveObject().set(\"lineHeight\", newRowHeight);\n    }\n    setRowHeightInput(e.target.value);\n    canvas.renderAll();\n    canvas.fire(\"object:modified\");\n  };\n  const [letterSpacingInput, setLetterSpacingInput] = useState(\"1\");\n  const changeLetterSpacing = (e) => {\n    const newletterSpacing = parseInt(e.target.value, 10) * 10;\n    if (canvas.getActiveObject().type === \"textbox\") {\n      canvas.getActiveObject().set(\"charSpacing\", newletterSpacing);\n    }\n    setLetterSpacingInput(e.target.value);\n    canvas.renderAll();\n    canvas.fire(\"object:modified\");\n  };\n  const underLine = () => {\n    if (canvas.getActiveObject().type === \"textbox\") {\n      if (canvas.getActiveObject().underline) {\n        canvas.getActiveObject().set(\"underline\", false);\n      } else {\n        canvas.getActiveObject().set(\"underline\", true);\n      }\n    }\n    canvas.renderAll();\n    canvas.fire(\"object:modified\");\n  };\n  const deleteLine = () => {\n    if (canvas.getActiveObject().type === \"textbox\") {\n      if (canvas.getActiveObject().linethrough) {\n        canvas.getActiveObject().set(\"linethrough\", false);\n      } else {\n        canvas.getActiveObject().set(\"linethrough\", true);\n      }\n    }\n    canvas.renderAll();\n    canvas.fire(\"object:modified\");\n  };\n  const italic = () => {\n    if (canvas.getActiveObject().type === \"textbox\") {\n      if (canvas.getActiveObject().fontStyle !== \"italic\") {\n        canvas.getActiveObject().set(\"fontStyle\", \"italic\");\n      } else {\n        canvas.getActiveObject().set(\"fontStyle\", \"normal\");\n      }\n    }\n    canvas.renderAll();\n    canvas.fire(\"object:modified\");\n  };\n  const toLeft = () => {\n    if (canvas.getActiveObject().type === \"textbox\") {\n      if (canvas.getActiveObject().textAlign !== \"left\") {\n        canvas.getActiveObject().set(\"textAlign\", \"left\");\n      }\n    }\n    canvas.renderAll();\n    canvas.fire(\"object:modified\");\n  };\n  const toMiddle = () => {\n    if (canvas.getActiveObject().type === \"textbox\") {\n      if (canvas.getActiveObject().textAlign !== \"center\") {\n        canvas.getActiveObject().set(\"textAlign\", \"center\");\n      }\n    }\n    canvas.renderAll();\n    canvas.fire(\"object:modified\");\n  };\n  const toRight = () => {\n    if (canvas.getActiveObject().type === \"textbox\") {\n      if (canvas.getActiveObject().textAlign !== \"right\") {\n        canvas.getActiveObject().set(\"textAlign\", \"right\");\n      }\n    }\n    canvas.renderAll();\n    canvas.fire(\"object:modified\");\n  };\n  const setSuper = () => {\n    if (canvas.getActiveObject().type === \"textbox\") {\n      canvas.getActiveObject().setSuperscript();\n    }\n    canvas.renderAll();\n    canvas.fire(\"object:modified\");\n  };\n  const setSub = () => {\n    if (canvas.getActiveObject().type === \"textbox\") {\n      canvas.getActiveObject().setSubscript();\n    }\n    canvas.renderAll();\n    canvas.fire(\"object:modified\");\n  };\n  const removeScript = () => {\n    if (canvas.getActiveObject().type === \"textbox\") {\n      canvas.getActiveObject().setSelectionStyles({\n        fontSize: undefined,\n        deltaY: undefined,\n      });\n      canvas.renderAll();\n      canvas.fire(\"object:modified\");\n    }\n  };\n  const setBold = () => {\n    if (canvas.getActiveObject().type === \"textbox\") {\n      if (canvas.getActiveObject().fontWeight !== \"bold\") {\n        canvas.getActiveObject().set(\"fontWeight\", \"bold\");\n      } else {\n        canvas.getActiveObject().set(\"fontWeight\", \"normal\");\n      }\n    }\n    canvas.renderAll();\n    canvas.fire(\"object:modified\");\n  };\n\n  return (\n    <div id=\"textAdjustBox\">\n      <div onClick={addTextbox} className=\"addTextbox\">\n        <span> addTextbox</span>\n      </div>\n      <div className=\"widthChange\">\n        <label>font size: </label>\n        <img src={width} />\n        <input\n          onChange={changeFontSize}\n          type=\"range\"\n          min=\"1\"\n          max=\"150\"\n          id=\"fontSizeInput\"\n          value={fontSizeInput}\n        />\n      </div>\n      <div className=\"colorChange\">\n        <div>font color:</div>\n        <input\n          onChange={changeTextColor}\n          type=\"color\"\n          id=\"TextColorInput\"\n          value={textColor}\n        />\n      </div>\n      <div className=\"colorChange\">\n        <div>background color:</div>\n        <input\n          onChange={changeTextBackColor}\n          type=\"color\"\n          id=\"TextBackColorInput\"\n          value={textBackColor}\n        />\n      </div>\n      <div className=\"widthChange\">\n        <label>row height: </label>\n        <img src={width} />\n        <input\n          onChange={changeRowHeight}\n          type=\"range\"\n          min=\"10\"\n          max=\"50\"\n          id=\"rowHeightInput\"\n          value={rowHeightInput}\n        />\n      </div>\n      <div className=\"widthChange\">\n        <label>font spacing: </label>\n        <img src={width} />\n        <input\n          onChange={changeLetterSpacing}\n          type=\"range\"\n          min=\"1\"\n          max=\"50\"\n          id=\"letterSpacingInput\"\n          value={letterSpacingInput}\n        />\n      </div>\n      <div className=\"btnBox\">\n        <div className=\"no\">style:</div>\n        <div>\n          <img src={boldStyle} onClick={setBold} id=\"bold\" />\n        </div>\n        <div>\n          <img src={italicStyle} onClick={italic} id=\"italic\" />\n        </div>\n        <div>\n          <img src={underLineStyle} onClick={underLine} />\n        </div>\n        <div>\n          <img src={deleteLineStyle} onClick={deleteLine} />\n        </div>\n      </div>\n      <div className=\"btnBox\">\n        <div className=\"no\">align:</div>\n        <div>\n          <img src={alignLeftStyle} onClick={toLeft} />\n        </div>\n        <div>\n          <img src={alignCenterStyle} onClick={toMiddle} />\n        </div>\n        <div>\n          <img src={alignRightStyle} onClick={toRight} />\n        </div>\n      </div>\n      <div className=\"btnBox\">\n        <div className=\"no\">mark:</div>\n        <div>\n          <img src={superStyle} onClick={setSuper} />\n        </div>\n        <div>\n          <img src={subStyle} onClick={setSub} />\n        </div>\n        <div>\n          <img src={normalStyle} onClick={removeScript} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/dragonlonss/biben/src/components/AddedBoard.js",["226","227","228","229","230","231","232","233","234"],"import React, { useState, useEffect } from \"react\";\nimport pagePic from \"../Img/boardPic.png\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase\";\nexport default function AddedBoard(props) {\n  //   let id = props.id;\n  const [name, setName] = useState(\"\");\n  const [boardPic, setBoardPic] = useState(\"\");\n  const [newName, setNewName] = useState(\"\");\n  const [shareEmail, setShareEmail] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n  const db = firebase.firestore();\n  const sharePagePop = props.sharePagePop;\n  // useEffect(() => {\n  firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      var db = firebase.firestore();\n      db.collection(\"canvases\")\n        .doc(props.id)\n        .get()\n        .then((data) => {\n          // if (data) {\n          setName(data.data().name);\n          setOwner(data.data().owner);\n          data.data().photoURL\n            ? setBoardPic(`url( ${data.data().photoURL}  )`)\n            : setBoardPic(\"\");\n          console.log(data.data().name);\n          // }\n        });\n    }\n  });\n  // }, []);\n  let history = useHistory();\n  const boardPicHandle = () => {};\n  const showList = (e) => {\n    // console.log(e.target.nextSibling.classList);\n    let list = document.getElementsByClassName(\"AddBoardList\");\n    // for (var i = 0; i < list.length; i++) {\n    //   list[i].classList = \"AddBoardList hide\";\n    // }\n    // document.querySelector(\".AddBoardList\").classList = \"AddBoardList hide\";\n    if (e.target.nextSibling.classList.length === 1) {\n      //   e.target.nextSibling.classList = \"AddBoardList hide\";\n      for (var i = 0; i < list.length; i++) {\n        list[i].classList = \"AddBoardList hide\";\n      }\n    } else {\n      for (var i = 0; i < list.length; i++) {\n        list[i].classList = \"AddBoardList hide\";\n      }\n      e.target.nextSibling.classList = \"AddBoardList\";\n    }\n    e.stopPropagation();\n  };\n  const changeName = () => {\n    console.log(\"GGG\");\n  };\n  const goToTheCanvas = () => {\n    history.push(\"/board/\" + props.id);\n  };\n\n  const renameBoard = () => {\n    db.collection(\"canvases\").doc(props.id).update({\n      name: newName,\n    });\n  };\n  const deleteBoard = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    db.collection(\"canvases\")\n      .doc(props.id)\n      .get()\n      .then((data) => {\n        if (data.data().user.length !== 0) {\n          data.data().user.forEach((email) => {\n            db.collection(\"users\")\n              .doc(email)\n              .update({\n                canvasUse: firebase.firestore.FieldValue.arrayRemove(props.id),\n              });\n          });\n        }\n        if (data.data().observer.length !== 0) {\n          data.data().observer.forEach((email) => {\n            db.collection(\"users\")\n              .doc(email)\n              .update({\n                canvasObserve: firebase.firestore.FieldValue.arrayRemove(\n                  props.id\n                ),\n              });\n          });\n        }\n        db.collection(\"users\")\n          .doc(owner)\n          .update({\n            canvasOwn: firebase.firestore.FieldValue.arrayRemove(props.id),\n          });\n      })\n      .then(() => {\n        db.collection(\"canvases\").doc(props.id).delete();\n      });\n  };\n  const shareBoardUSer = () => {\n    db.collection(\"canvases\")\n      .doc(props.id)\n      .update({\n        user: firebase.firestore.FieldValue.arrayUnion(props.id),\n      });\n    db.collection(\"users\")\n      .doc(shareEmail)\n      .update({\n        canvasUse: firebase.firestore.FieldValue.arrayUnion(props.id),\n      });\n  };\n\n  const shareBoardObserver = () => {\n    db.collection(\"canvases\")\n      .doc(props.id)\n      .update({\n        observer: firebase.firestore.FieldValue.arrayUnion(props.id),\n      });\n    db.collection(\"users\")\n      .doc(shareEmail)\n      .update({\n        canvasObserve: firebase.firestore.FieldValue.arrayUnion(props.id),\n      });\n  };\n\n  const shareBtnHandle = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    sharePagePop(props.id);\n  };\n  return (\n    <div className=\"AddBoardBox \" onClick={goToTheCanvas} id={props.id}>\n      <div className=\"AddBoardPic\" style={{ backgroundImage: boardPic }}>\n        <div className=\"AddBoardLIconBox\" onClick={showList}></div>\n        <div className=\"AddBoardList hide\">\n          <ul>\n            <li>Rename</li>\n            <li onClick={shareBtnHandle}>Share</li>\n            <li onClick={deleteBoard}>Delete</li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"AddBoardName\" onClick={changeName}>\n        <div>{name}</div>\n        {/* <input value={name} /> */}\n      </div>\n    </div>\n  );\n}\n",["235","236"],"/Users/dragonlonss/biben/src/index.js",[],["237","238"],"/Users/dragonlonss/biben/src/firebaseConfig.js",[],"/Users/dragonlonss/biben/src/profile.js",["239","240","241","242","243","244","245","246","247","248"],"import React, { useState, useEffect } from \"react\";\nimport { ReactComponent as Logo } from \"./Img/toolbar/open.svg\";\nimport { ReactComponent as Add } from \"./Img/add.svg\";\nimport { ReactComponent as Cancel } from \"./Img/back/cancel.svg\";\nimport { ReactComponent as DrawCircle } from \"./Img/drawCircle3.svg\";\nimport AddedBoard from \"./components/AddedBoard.js\";\nimport { signOut } from \"./firebase\";\nimport firebase from \"firebase\";\nimport logo from \"./Img/icon13.svg\";\nimport userImg from \"./Img/user.png\";\nimport firebaseConfig from \"./firebaseConfig\";\nimport { useHistory } from \"react-router-dom\";\nimport { ReactComponent as Cowork } from \"./Img/profile/undraw_Online_collaboration.svg\";\nimport { ReactComponent as Learn } from \"./Img/profile/undraw_Online_learning.svg\";\n\nimport \"./profile.scss\";\nimport Proverb from \"./components/Proverb.js\";\n\nexport default function ProfilePage() {\n  const [canvasOwn, setCanvasOwn] = useState([]);\n  const [canvasObserve, setCanvasObserve] = useState([]);\n  const [canvasRead, setCanvasRead] = useState([]);\n  const [nameInput, setNameInput] = useState(\"new board\");\n  const [userEmailfromF, setUserEmailfromF] = useState(\"\");\n  const [photo, setPhoto] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [boardChosen, setBoardChosen] = useState(\"\");\n  const [shareInputUse, setShareInputUse] = useState(\"\");\n  const [shareInputObserve, setShareInputObserve] = useState(\"\");\n  const db = firebase.firestore();\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        // User is signed in.\n        // document.querySelector(\"#status\").innerHTML = \"已登入\";\n        db.collection(\"users\")\n          .doc(user.email)\n          // .get()\n          // .then((data) => {\n          .onSnapshot((data) => {\n            setCanvasOwn(data.data().canvasOwn.reverse());\n            setCanvasRead(data.data().canvasUse.reverse());\n            setCanvasObserve(data.data().canvasObserve.reverse());\n            setUserEmailfromF(user.email);\n            // setUserName(user.userName);\n            if (user.providerData[0].providerId === \"facebook.com\") {\n              setPhoto(user.photoURL + \"?type=large\");\n              setUserName(user.displayName);\n            } else if (user.providerData[0].providerId === \"google.com\") {\n              setPhoto(user.photoURL);\n              setUserName(user.displayName);\n            } else {\n              setPhoto(userImg);\n              setUserName(data.data().userName);\n            }\n\n            // console.log(user);\n            // console.log(canvasOwn);\n            // document.querySelector(\"#boards\").appendChild(\n            // data.data().canvasOwn.map((obj) => {\n            //   console.log(obj);\n            //   <AddedBoard id={obj} key={obj} />;\n            // })\n            // React.createElement(AddedBoard)\n            // );\n          });\n        // .then(() => {\n        //   console.log(canvasOwn);\n        //   // canvasOwn.map((obj) =>\n        //   //   document\n        //   //     .querySelector(\"#boards\")\n        //   //     .appendChild(<AddedBoard id={obj} key={obj} />)\n        //   // );\n        // });\n        // console.log(user.email);\n      }\n    });\n  }, []);\n  let history = useHistory();\n\n  // const app = firebase.apps.length\n  //   ? firebase.app()\n  //   : firebase.initializeApp(firebaseConfig);\n  // firebase.auth().onAuthStateChanged(function (user) {\n  //   if (user) {\n  //     // User is signed in.\n  //     document.querySelector(\"#status\").innerHTML = \"已登入\";\n  //     console.log(user.email);\n  //   } else {\n  //     // No user is signed in.\n  //     document.querySelector(\"#status\").innerHTML = \"未登入，請點以下登入方式\";\n  //   }\n  // });\n  // firebase.auth().onAuthStateChanged(function (user) {\n  //   if (user) {\n  //     // User is signed in.\n  //     // document.querySelector(\"#status\").innerHTML = \"已登入\";\n  //     console.log(user.email);\n  //   } else {\n  //     // No user is signed in.\n  //     // document.querySelector(\"#status\").innerHTML = \"未登入，請點以下登入方式\";\n  //   }\n  // });\n  // const firebaseSnap = () => {\n  //   const app = firebase.apps.length\n  //     ? firebase.app()\n  //     : firebase.initializeApp(firebaseConfig);\n  //   var db = firebase.firestore();\n  //   db.collection(\"canvases\")\n  //     .doc(\"Test\")\n  //     .onSnapshot((querySnapshot) => {\n  //       console.log(querySnapshot.data().data);\n  //     });\n  // };\n  const signingOut = () => {\n    signOut();\n    history.push(\"/\");\n  };\n\n  const changeReadStatus = (e) => {\n    let a = document.getElementsByClassName(\"profileTag\");\n    for (var i = 0; i < a.length; i++) {\n      a[i].classList = \"profileTag\";\n    }\n    e.target.classList = \"profileTag selected\";\n    let b = document.getElementsByClassName(\"drawCompo\");\n    for (var i = 0; i < b.length; i++) {\n      b[i].classList = \"drawCompo\";\n    }\n    e.target.previousSibling.classList = \"drawCompo drawn\";\n    if (e.target.innerHTML === \"Boards you own\") {\n      document.querySelector(\"#boardsObserved\").style.display = \"none\";\n      document.querySelector(\"#boardsRead\").style.display = \"none\";\n      document.querySelector(\"#boardsContain\").style.display = \"flex\";\n    } else if (e.target.innerHTML === \"Shared with you\") {\n      document.querySelector(\"#boardsRead\").style.display = \"flex\";\n      document.querySelector(\"#boardsContain\").style.display = \"none\";\n      document.querySelector(\"#boardsObserved\").style.display = \"none\";\n    } else if (e.target.innerHTML === \"Boards read only\") {\n      document.querySelector(\"#boardsObserved\").style.display = \"flex\";\n      document.querySelector(\"#boardsContain\").style.display = \"none\";\n      document.querySelector(\"#boardsRead\").style.display = \"none\";\n    }\n  };\n\n  document.onclick = function () {\n    let list = document.getElementsByClassName(\"AddBoardList\");\n    for (var i = 0; i < list.length; i++) {\n      list[i].classList = \"AddBoardList hide\";\n    }\n  };\n  const addCanvas = () => {\n    var userEmail = firebase.auth().currentUser.email;\n    // console.log(userEmail);\n    var db = firebase.firestore();\n    db.collection(\"canvases\")\n      .add({\n        data: \"\",\n        name: nameInput,\n        owner: userEmail,\n        user: [],\n        observer: [],\n        createdTime: firebase.firestore.FieldValue.serverTimestamp(),\n        photoURL: \"\",\n      })\n      .then((docRef) => {\n        db.collection(\"users\")\n          .doc(userEmail)\n          .update({\n            canvasOwn: firebase.firestore.FieldValue.arrayUnion(docRef.id),\n          });\n        history.push(\"/board/\" + docRef.id);\n      });\n    // showInputDefault();\n  };\n\n  const handleNameInput = (e) => {\n    setNameInput(e.target.value);\n  };\n\n  const showNameInput = () => {\n    document.querySelector(\".addIconBox\").style.display = \"none\";\n    document.querySelector(\".InputNameBox\").style.display = \"block\";\n  };\n  const showInputDefault = () => {\n    document.querySelector(\".addIconBox\").style.display = \"block\";\n    document.querySelector(\".InputNameBox\").style.display = \"none\";\n  };\n\n  const deleteBoard = () => {\n    if (!boardChosen) {\n      return;\n    }\n    // db.collection(\"users\")\n    // .doc(userEmailfromF)\n    // .get()\n    // .then((data) => {})\n    db.collection(\"canvases\")\n      .doc(boardChosen)\n      .get()\n      .then((data) => {\n        console.log(data.data().user);\n      });\n  };\n  const onfocusBoard = (boardId) => {\n    console.log(boardId);\n    setBoardChosen(boardId);\n  };\n  const sharePagePop = (id) => {\n    setBoardChosen(id);\n    console.log(id);\n    document.querySelector(\"#darkBack\").className = \"scaleIn\";\n    document.querySelector(\"#darkBack\").style.display = \"flex\";\n    document.querySelector(\"#dark\").style.display = \"block\";\n  };\n  const showCanvasRead = () => {\n    if (canvasRead.length === 0) {\n      return \"Nothing here yet!\";\n    } else {\n      return canvasRead.map((obj) => (\n        <AddedBoard id={obj} key={obj} sharePagePop={sharePagePop} />\n      ));\n    }\n  };\n  const showCanvasObserve = () => {\n    if (canvasObserve.length === 0) {\n      return \"Nothing here yet!\";\n    } else {\n      return canvasObserve.map((obj) => (\n        <AddedBoard id={obj} key={obj} sharePagePop={sharePagePop} />\n      ));\n    }\n  };\n\n  const shareCanvasUse = (observerEmail) => {\n    let canvasId = boardChosen;\n\n    db.collection(\"canvases\")\n      .doc(canvasId)\n      .update({\n        user: firebase.firestore.FieldValue.arrayUnion(observerEmail),\n      });\n    db.collection(\"users\")\n      .doc(observerEmail)\n      .update({\n        canvasUse: firebase.firestore.FieldValue.arrayUnion(canvasId),\n      });\n  };\n\n  const handleShareUse = () => {\n    shareCanvasUse(shareInputUse);\n    setShareInputUse(\"\");\n    setShareInputObserve(\"\");\n    shareBoxNon();\n  };\n  const shareCanvasObserve = (observerEmail) => {\n    let canvasId = boardChosen;\n\n    db.collection(\"canvases\")\n      .doc(canvasId)\n      .update({\n        observer: firebase.firestore.FieldValue.arrayUnion(observerEmail),\n      });\n    db.collection(\"users\")\n      .doc(observerEmail)\n      .update({\n        canvasObserve: firebase.firestore.FieldValue.arrayUnion(canvasId),\n      });\n  };\n\n  const handleShareObserve = () => {\n    shareCanvasObserve(shareInputObserve);\n    setShareInputUse(\"\");\n    setShareInputObserve(\"\");\n    shareBoxNon();\n  };\n  const shareBoxNon = () => {\n    document.querySelector(\"#darkBack\").className = \"scaleOut\";\n    setTimeout(() => {\n      document.querySelector(\"#darkBack\").style.display = \"none\";\n      document.querySelector(\"#dark\").style.display = \"none\";\n    }, 300);\n  };\n\n  return (\n    <>\n      <div id=\"profilePage\">\n        <div className=\"topNavBox\">\n          <div className=\"topNav\">\n            <div className=\"mainLogo\">\n              <img src={logo} className=\"logo\" />\n              <div>BAIBEN</div>\n            </div>\n            <div className=\"logInWay\" id=\"flexEnd\">\n              {/* <div style={{ backgroundColor: \"#ffffff\" } } id=\"fake\"></div> */}\n              <div\n                onClick={signingOut}\n                style={{ backgroundColor: \"red\" }}\n                className=\"topNavBtn bigger\"\n              >\n                Log Out\n              </div>\n            </div>\n          </div>\n        </div>\n        <div id=\"profileLeft\">\n          <div id=\"profileP\">\n            <img id=\"profilePic\" src={photo} />\n            <div id=\"profileEmail\">Hello, {userName}</div>\n            {/* <div id=\"profileMessage\">What would you like to do today? </div> */}\n          </div>\n          <div id=\"ProfileBtnBox\">\n            <div id=\"tagBox\">\n              <div className=\"drawBox \">\n                <DrawCircle className=\"drawCompo drawn\" />\n                <div className=\"profileTag selected\" onClick={changeReadStatus}>\n                  Boards you own\n                </div>\n              </div>\n              <div className=\"drawBox\">\n                <DrawCircle className=\"drawCompo\" />\n                <div className=\"profileTag \" onClick={changeReadStatus}>\n                  Shared with you\n                </div>\n              </div>\n              <div className=\"drawBox \">\n                <DrawCircle className=\"drawCompo \" />\n                <div className=\"profileTag selected\" onClick={changeReadStatus}>\n                  Boards read only\n                </div>\n              </div>\n            </div>\n            {/* <div className=\"profileTag\" onClick={changeReadStatus}>\n            You can check\n          </div> */}\n          </div>\n\n          {/* <div id=\"profileFuncBox\">\n          <div className=\"profileTag\" onClick={changeReadStatus}>\n            Rename\n          </div>\n          <div className=\"profileTag\" onClick={deleteBoard}>\n            Delete\n          </div>\n          <div className=\"profileTag\" onClick={changeReadStatus}>\n            Share\n          </div>\n        </div> */}\n        </div>\n        <div id=\"profileRight\">\n          <div id=\"profileMessage\">What would you like to do today? </div>\n\n          {/* <Proverb /> */}\n          <div id=\"profileBoards\">\n            {/* <div className=\"profileTag\">Your Board</div>\n        <div className=\"profileTag\">You can check</div> */}\n\n            <div id=\"boards\">\n              <div id=\"boardsContain\">\n                {/* <Proverb /> */}\n                {/* <div className=\"profileFa\" /> */}\n                <div className=\"boardCreate\">\n                  <div className=\"addIconBox\" onClick={showNameInput}>\n                    <Add className=\"addIcon\" />\n                    <div id=\"beforeAdd\">Create a new board</div>\n                  </div>\n                  <div className=\"InputNameBox\">\n                    <div className=\"inputTop\">\n                      <Cancel\n                        className=\"cancelIcon bigger\"\n                        onClick={showInputDefault}\n                      />\n                      <div className=\"inputName\">Name your board?</div>\n                      <input value={nameInput} onChange={handleNameInput} />\n                    </div>\n                    <div className=\"inputBottom \" onClick={addCanvas}>\n                      <div className=\"bigger\">add a new board</div>\n                    </div>\n                  </div>\n                </div>\n                {canvasOwn.map((obj) => (\n                  <AddedBoard id={obj} key={obj} sharePagePop={sharePagePop} />\n                ))}\n                <div className=\"profileFa\" />\n                <div className=\"profileFa\" />\n                <div className=\"profileFa\" />\n                <div className=\"profileFa\" />\n                <div className=\"profileFa\" />\n                <div className=\"profileFa\" />\n              </div>\n              <div id=\"boardsRead\">\n                {showCanvasRead()}\n                <div className=\"profileFa\" />\n                <div className=\"profileFa\" />\n                <div className=\"profileFa\" />\n                <div className=\"profileFa\" />\n                <div className=\"profileFa\" />\n                <div className=\"profileFa\" />\n              </div>\n              <div id=\"boardsObserved\">\n                {showCanvasObserve()}\n                <div className=\"profileFa\" />\n                <div className=\"profileFa\" />\n                <div className=\"profileFa\" />\n                <div className=\"profileFa\" />\n                <div className=\"profileFa\" />\n                <div className=\"profileFa\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id=\"dark\" />\n      <div id=\"darkBack\" style={{ display: \"none\" }} className=\"scaleIn\">\n        <div id=\"shareBoxOuter\">\n          <div id=\"profileShareBox\">\n            <div id=\"profileCancelBox\">\n              <Cancel\n                id=\"cancelOutShare\"\n                onClick={shareBoxNon}\n                className=\"bigger\"\n              />\n            </div>\n            <div id=\"shareInputBox\">\n              <div className=\"shareWayBox\">\n                <div className=\"h1\">Share to co-worker</div>\n                <div>invite others to co-work </div>\n                <div> (the one you invited can edit the board)</div>\n                <Cowork className=\"shareImg\" />\n                <div className=\"shareBtnBox\">\n                  <input\n                    className=\"shareInput\"\n                    value={shareInputUse}\n                    placeholder=\"Please enter an Email\"\n                    onChange={(e) => {\n                      setShareInputUse(e.target.value);\n                    }}\n                  />\n                  <div onClick={handleShareUse} className=\"shareBtn\">\n                    share\n                  </div>\n                </div>\n              </div>\n              <div className=\"shareWayBox\">\n                <div className=\"h1\">Share to student</div>\n                <div>invite others to read </div>\n                <div>(the one you invited can read only)</div>\n                <Learn className=\"shareImg\" />\n                <div className=\"shareBtnBox\">\n                  <input\n                    className=\"shareInput\"\n                    value={shareInputObserve}\n                    placeholder=\"Please enter an Email\"\n                    onChange={(e) => {\n                      setShareInputObserve(e.target.value);\n                    }}\n                  />\n                  <div onClick={handleShareObserve} className=\"shareBtn\">\n                    share\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n",["249","250"],"/Users/dragonlonss/biben/src/components/Try_It.js",["251","252","253","254","255","256"],"import React, { useState, useEffect } from \"react\";\nimport { fabric } from \"fabric\";\nimport pencil from \"../Img/back/pencil02.svg\";\nimport { ReactComponent as Pencil } from \"../Img/back/pencil02.svg\";\nimport eraser from \"../Img/back/eraser02.svg\";\nimport { ReactComponent as Eraser } from \"../Img/back/eraser02.svg\";\nimport { ReactComponent as Artist } from \"../Img/back/undraw_artist.svg\";\nimport { ReactComponent as ColorP } from \"../Img/back/color-palette.svg\";\nimport { SketchPicker } from \"react-color\";\n\nexport default function Try_It() {\n  const [canvas, setCanvas] = useState(\"\");\n  const [fillColor, setFillColor] = useState(\"#d4864d\");\n  const [colorPlate, setColorPlate] = useState(\"\");\n  useEffect(() => {\n    let canvasToSet = new fabric.Canvas(\"can\", {\n      height: 350,\n      width: 800,\n      backgroundColor: \"#ffffff\",\n      selection: false,\n      isDrawingMode: false,\n    });\n    fabric.Object.prototype.set({\n      cornerColor: \"white\",\n      conerSize: 20,\n      cornerStrokeColor: \"gray\",\n      borderColor: \"gray\",\n      transparentCorners: false,\n      cornerStyle: \"circle\",\n      padding: 10,\n    });\n    setCanvas(canvasToSet);\n  }, []);\n\n  var delKey = 8;\n  onkeydown = (e) => {\n    if (e.keyCode === delKey) {\n      if (canvas.getActiveObject() && !canvas.getActiveObject().isEditing) {\n        deleteChosen(canvas);\n      }\n    }\n  };\n  const freeDwawing = () => {\n    let pencil = document.querySelector(\"#tryItPencil\");\n    if (canvas.isDrawingMode) {\n      canvas.isDrawingMode = false;\n      pencil.className = \"tryIcon bigger\";\n    } else {\n      canvas.isDrawingMode = true;\n      canvas.freeDrawingBrush.color = fillColor;\n      pencil.className = \"tryIcon bigger drawClicked\";\n    }\n  };\n  const closeDraw = () => {\n    let pencil = document.querySelector(\"#tryItPencil\");\n    if (canvas.isDrawingMode) {\n      canvas.isDrawingMode = false;\n      pencil.className = \"tryIcon bigger\";\n    }\n  };\n  const addRect = () => {\n    const rect = new fabric.Rect({\n      height: 100,\n      width: 100,\n      top: 50,\n      left: 50,\n      fill: fillColor,\n    });\n    canvas.add(rect);\n    canvas.renderAll();\n    closeDraw();\n  };\n  const addCircle = () => {\n    const circle = new fabric.Circle({\n      radius: 50,\n      top: 50,\n      left: 50,\n      fill: fillColor,\n    });\n    canvas.add(circle);\n    canvas.renderAll();\n    closeDraw();\n  };\n  const deleteChosen = () => {\n    var activeObject = canvas.getActiveObject();\n    if (activeObject !== null) {\n      canvas.remove(activeObject);\n    }\n    canvas.discardActiveObject();\n    canvas.renderAll();\n    closeDraw();\n  };\n\n  const changeFillColor = (e) => {\n    if (canvas.getActiveObject()) {\n      if (canvas.getActiveObject().type === \"path\") {\n        canvas.getActiveObject().set(\"stroke\", e.target.value);\n      } else {\n        canvas.getActiveObject().set(\"fill\", e.target.value);\n      }\n    } else if (canvas.isDrawingMode) {\n      canvas.freeDrawingBrush.color = e.target.value;\n    }\n    setFillColor(e.target.value);\n    canvas.renderAll();\n  };\n\n  // const handleFillColor = (color, e) => {\n  //   if (canvas.getActiveObject()) {\n  //     if (canvas.getActiveObject().type === \"path\") {\n  //       canvas.getActiveObject().set(\"stroke\", color.hex);\n  //     } else {\n  //       canvas.getActiveObject().set(\"fill\", color.hex);\n  //     }\n  //   } else if (canvas.isDrawingMode) {\n  //     canvas.freeDrawingBrush.color = color.hex;\n  //   }\n  //   setFillColor(color.hex);\n  //   canvas.renderAll();\n  //   // setColorPlate(\"\");\n  // };\n\n  // const showPicker = () => {\n  //   if (colorPlate === \"\") {\n  //     setColorPlate(\n  //       <SketchPicker\n  //         onChangeComplete={handleFillColor}\n  //         color={fillColor}\n  //         disableAlpha=\"true\"\n  //       />\n  //     );\n  //   } else {\n  //     setColorPlate(\"\");\n  //   }\n  // };\n  return (\n    <div id=\"tryBox\">\n      <div id=\"tool\">\n        {/* <div className=\"tryIcon bigger\">\n          <ColorP fill={fillColor} onClick={showPicker} />\n          {colorPlate}\n\n        </div> */}\n\n        <div id=\"color\">\n          color\n          <input\n            type=\"color\"\n            value={fillColor}\n            onChange={changeFillColor}\n            id=\"tryColorInput\"\n            className=\"bigger\"\n          />\n        </div>\n        <div onClick={freeDwawing} className=\"tryIcon bigger\" id=\"tryItPencil\">\n          <Pencil fill={fillColor} />\n          {/* <img src={pencil} /> */}\n        </div>\n        <div onClick={addRect} className=\"tryIcon center bigger\">\n          <div id=\"rect\" style={{ backgroundColor: fillColor }} />\n          {/* <img /> */}\n        </div>\n        <div onClick={addCircle} className=\"tryIcon center bigger\">\n          <div id=\"circle\" style={{ backgroundColor: fillColor }} />\n          {/* <img /> */}\n        </div>\n        <div onClick={deleteChosen} className=\"tryIcon bigger\">\n          {/* <img src={eraser} /> */}\n          <Eraser fill={fillColor} />\n        </div>\n      </div>\n      <canvas id=\"can\" />\n      <div id=\"artistBox\">\n        <Artist id=\"artist\" />\n        {/* <img /> */}\n      </div>\n    </div>\n  );\n}\n",["257","258"],"/Users/dragonlonss/biben/src/components/Proverb.js",[],["259","260"],"/Users/dragonlonss/biben/src/components/ChatRoom.js",["261","262","263"],{"ruleId":"264","severity":1,"message":"265","line":1,"column":8,"nodeType":"266","messageId":"267","endLine":1,"endColumn":13},{"ruleId":"264","severity":1,"message":"268","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":25},{"ruleId":"264","severity":1,"message":"269","line":31,"column":11,"nodeType":"266","messageId":"267","endLine":31,"endColumn":20},{"ruleId":"264","severity":1,"message":"270","line":77,"column":11,"nodeType":"266","messageId":"267","endLine":77,"endColumn":20},{"ruleId":"264","severity":1,"message":"271","line":82,"column":11,"nodeType":"266","messageId":"267","endLine":82,"endColumn":16},{"ruleId":"264","severity":1,"message":"272","line":84,"column":11,"nodeType":"266","messageId":"267","endLine":84,"endColumn":21},{"ruleId":"264","severity":1,"message":"273","line":105,"column":9,"nodeType":"266","messageId":"267","endLine":105,"endColumn":12},{"ruleId":"264","severity":1,"message":"274","line":5,"column":8,"nodeType":"266","messageId":"267","endLine":5,"endColumn":22},{"ruleId":"264","severity":1,"message":"275","line":8,"column":8,"nodeType":"266","messageId":"267","endLine":8,"endColumn":18},{"ruleId":"264","severity":1,"message":"276","line":9,"column":8,"nodeType":"266","messageId":"267","endLine":9,"endColumn":18},{"ruleId":"264","severity":1,"message":"277","line":11,"column":8,"nodeType":"266","messageId":"267","endLine":11,"endColumn":20},{"ruleId":"264","severity":1,"message":"278","line":12,"column":8,"nodeType":"266","messageId":"267","endLine":12,"endColumn":19},{"ruleId":"264","severity":1,"message":"279","line":14,"column":16,"nodeType":"266","messageId":"267","endLine":14,"endColumn":22},{"ruleId":"264","severity":1,"message":"280","line":16,"column":8,"nodeType":"266","messageId":"267","endLine":16,"endColumn":12},{"ruleId":"264","severity":1,"message":"281","line":18,"column":10,"nodeType":"266","messageId":"267","endLine":18,"endColumn":13},{"ruleId":"264","severity":1,"message":"282","line":20,"column":10,"nodeType":"266","messageId":"267","endLine":20,"endColumn":20},{"ruleId":"264","severity":1,"message":"283","line":20,"column":22,"nodeType":"266","messageId":"267","endLine":20,"endColumn":33},{"ruleId":"264","severity":1,"message":"284","line":21,"column":10,"nodeType":"266","messageId":"267","endLine":21,"endColumn":24},{"ruleId":"264","severity":1,"message":"285","line":22,"column":10,"nodeType":"266","messageId":"267","endLine":22,"endColumn":30},{"ruleId":"264","severity":1,"message":"286","line":51,"column":10,"nodeType":"266","messageId":"267","endLine":51,"endColumn":20},{"ruleId":"264","severity":1,"message":"287","line":51,"column":22,"nodeType":"266","messageId":"267","endLine":51,"endColumn":35},{"ruleId":"264","severity":1,"message":"288","line":216,"column":14,"nodeType":"266","messageId":"267","endLine":216,"endColumn":20},{"ruleId":"289","severity":1,"message":"290","line":649,"column":6,"nodeType":"291","endLine":649,"endColumn":8,"suggestions":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","replacedBy":"296"},{"ruleId":"264","severity":1,"message":"297","line":12,"column":8,"nodeType":"266","messageId":"267","endLine":12,"endColumn":15},{"ruleId":"264","severity":1,"message":"279","line":14,"column":16,"nodeType":"266","messageId":"267","endLine":14,"endColumn":22},{"ruleId":"264","severity":1,"message":"298","line":24,"column":10,"nodeType":"266","messageId":"267","endLine":24,"endColumn":16},{"ruleId":"264","severity":1,"message":"299","line":103,"column":9,"nodeType":"266","messageId":"267","endLine":103,"endColumn":19},{"ruleId":"264","severity":1,"message":"300","line":223,"column":9,"nodeType":"266","messageId":"267","endLine":223,"endColumn":20},{"ruleId":"264","severity":1,"message":"301","line":227,"column":9,"nodeType":"266","messageId":"267","endLine":227,"endColumn":14},{"ruleId":"264","severity":1,"message":"302","line":235,"column":9,"nodeType":"266","messageId":"267","endLine":235,"endColumn":20},{"ruleId":"303","severity":1,"message":"304","line":247,"column":9,"nodeType":"305","endLine":251,"endColumn":11},{"ruleId":"303","severity":1,"message":"304","line":252,"column":9,"nodeType":"305","endLine":256,"endColumn":11},{"ruleId":"303","severity":1,"message":"304","line":258,"column":9,"nodeType":"305","endLine":262,"endColumn":11},{"ruleId":"303","severity":1,"message":"304","line":263,"column":9,"nodeType":"305","endLine":267,"endColumn":11},{"ruleId":"303","severity":1,"message":"304","line":268,"column":9,"nodeType":"305","endLine":272,"endColumn":11},{"ruleId":"303","severity":1,"message":"304","line":273,"column":9,"nodeType":"305","endLine":277,"endColumn":11},{"ruleId":"303","severity":1,"message":"304","line":278,"column":9,"nodeType":"305","endLine":282,"endColumn":11},{"ruleId":"303","severity":1,"message":"304","line":283,"column":9,"nodeType":"305","endLine":283,"endColumn":81},{"ruleId":"264","severity":1,"message":"306","line":2,"column":10,"nodeType":"266","messageId":"267","endLine":2,"endColumn":16},{"ruleId":"264","severity":1,"message":"307","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":16},{"ruleId":"264","severity":1,"message":"274","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":22},{"ruleId":"264","severity":1,"message":"308","line":14,"column":8,"nodeType":"266","messageId":"267","endLine":14,"endColumn":17},{"ruleId":"264","severity":1,"message":"309","line":15,"column":8,"nodeType":"266","messageId":"267","endLine":15,"endColumn":12},{"ruleId":"264","severity":1,"message":"310","line":16,"column":27,"nodeType":"266","messageId":"267","endLine":16,"endColumn":33},{"ruleId":"264","severity":1,"message":"311","line":16,"column":35,"nodeType":"266","messageId":"267","endLine":16,"endColumn":39},{"ruleId":"264","severity":1,"message":"280","line":21,"column":8,"nodeType":"266","messageId":"267","endLine":21,"endColumn":12},{"ruleId":"264","severity":1,"message":"312","line":87,"column":9,"nodeType":"266","messageId":"267","endLine":87,"endColumn":17},{"ruleId":"303","severity":1,"message":"304","line":121,"column":9,"nodeType":"305","endLine":127,"endColumn":11},{"ruleId":"303","severity":1,"message":"304","line":128,"column":9,"nodeType":"305","endLine":128,"endColumn":74},{"ruleId":"303","severity":1,"message":"304","line":129,"column":9,"nodeType":"305","endLine":129,"endColumn":67},{"ruleId":"303","severity":1,"message":"304","line":130,"column":9,"nodeType":"305","endLine":130,"endColumn":73},{"ruleId":"264","severity":1,"message":"313","line":12,"column":28,"nodeType":"266","messageId":"267","endLine":12,"endColumn":37},{"ruleId":"264","severity":1,"message":"314","line":13,"column":28,"nodeType":"266","messageId":"267","endLine":13,"endColumn":33},{"ruleId":"264","severity":1,"message":"315","line":14,"column":28,"nodeType":"266","messageId":"267","endLine":14,"endColumn":35},{"ruleId":"264","severity":1,"message":"316","line":20,"column":9,"nodeType":"266","messageId":"267","endLine":20,"endColumn":11},{"ruleId":"264","severity":1,"message":"317","line":73,"column":9,"nodeType":"266","messageId":"267","endLine":73,"endColumn":14},{"ruleId":"264","severity":1,"message":"318","line":90,"column":9,"nodeType":"266","messageId":"267","endLine":90,"endColumn":16},{"ruleId":"264","severity":1,"message":"319","line":130,"column":9,"nodeType":"266","messageId":"267","endLine":130,"endColumn":18},{"ruleId":"264","severity":1,"message":"268","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":25},{"ruleId":"264","severity":1,"message":"320","line":1,"column":27,"nodeType":"266","messageId":"267","endLine":1,"endColumn":36},{"ruleId":"264","severity":1,"message":"321","line":1,"column":38,"nodeType":"266","messageId":"267","endLine":1,"endColumn":44},{"ruleId":"264","severity":1,"message":"322","line":2,"column":8,"nodeType":"266","messageId":"267","endLine":2,"endColumn":23},{"ruleId":"264","severity":1,"message":"323","line":5,"column":8,"nodeType":"266","messageId":"267","endLine":5,"endColumn":14},{"ruleId":"264","severity":1,"message":"324","line":6,"column":8,"nodeType":"266","messageId":"267","endLine":6,"endColumn":11},{"ruleId":"264","severity":1,"message":"325","line":7,"column":8,"nodeType":"266","messageId":"267","endLine":7,"endColumn":13},{"ruleId":"264","severity":1,"message":"326","line":8,"column":8,"nodeType":"266","messageId":"267","endLine":8,"endColumn":10},{"ruleId":"264","severity":1,"message":"327","line":9,"column":8,"nodeType":"266","messageId":"267","endLine":9,"endColumn":16},{"ruleId":"264","severity":1,"message":"328","line":10,"column":8,"nodeType":"266","messageId":"267","endLine":10,"endColumn":15},{"ruleId":"264","severity":1,"message":"329","line":12,"column":8,"nodeType":"266","messageId":"267","endLine":12,"endColumn":13},{"ruleId":"264","severity":1,"message":"330","line":15,"column":8,"nodeType":"266","messageId":"267","endLine":15,"endColumn":14},{"ruleId":"264","severity":1,"message":"331","line":27,"column":3,"nodeType":"266","messageId":"267","endLine":27,"endColumn":10},{"ruleId":"264","severity":1,"message":"274","line":34,"column":8,"nodeType":"266","messageId":"267","endLine":34,"endColumn":22},{"ruleId":"303","severity":1,"message":"304","line":114,"column":15,"nodeType":"305","endLine":114,"endColumn":50},{"ruleId":"303","severity":1,"message":"304","line":140,"column":13,"nodeType":"305","endLine":140,"endColumn":30},{"ruleId":"303","severity":1,"message":"304","line":150,"column":9,"nodeType":"305","endLine":150,"endColumn":62},{"ruleId":"303","severity":1,"message":"304","line":158,"column":13,"nodeType":"305","endLine":158,"endColumn":36},{"ruleId":"303","severity":1,"message":"304","line":162,"column":13,"nodeType":"305","endLine":162,"endColumn":34},{"ruleId":"303","severity":1,"message":"304","line":166,"column":13,"nodeType":"305","endLine":166,"endColumn":31},{"ruleId":"303","severity":1,"message":"304","line":170,"column":13,"nodeType":"305","endLine":170,"endColumn":31},{"ruleId":"332","severity":1,"message":"333","line":175,"column":9,"nodeType":"305","endLine":175,"endColumn":19},{"ruleId":"303","severity":1,"message":"304","line":186,"column":15,"nodeType":"305","endLine":186,"endColumn":50},{"ruleId":"303","severity":1,"message":"304","line":202,"column":17,"nodeType":"305","endLine":202,"endColumn":71},{"ruleId":"293","replacedBy":"334"},{"ruleId":"295","replacedBy":"335"},{"ruleId":"264","severity":1,"message":"273","line":6,"column":9,"nodeType":"266","messageId":"267","endLine":6,"endColumn":12},{"ruleId":"264","severity":1,"message":"336","line":22,"column":9,"nodeType":"266","messageId":"267","endLine":22,"endColumn":13},{"ruleId":"264","severity":1,"message":"274","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":22},{"ruleId":"264","severity":1,"message":"337","line":10,"column":7,"nodeType":"266","messageId":"267","endLine":10,"endColumn":14},{"ruleId":"264","severity":1,"message":"268","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":25},{"ruleId":"264","severity":1,"message":"338","line":2,"column":8,"nodeType":"266","messageId":"267","endLine":2,"endColumn":20},{"ruleId":"264","severity":1,"message":"339","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":22},{"ruleId":"264","severity":1,"message":"340","line":5,"column":28,"nodeType":"266","messageId":"267","endLine":5,"endColumn":42},{"ruleId":"303","severity":1,"message":"304","line":96,"column":9,"nodeType":"305","endLine":96,"endColumn":28},{"ruleId":"303","severity":1,"message":"304","line":108,"column":9,"nodeType":"305","endLine":108,"endColumn":28},{"ruleId":"293","replacedBy":"341"},{"ruleId":"295","replacedBy":"342"},{"ruleId":"293","replacedBy":"343"},{"ruleId":"295","replacedBy":"344"},{"ruleId":"264","severity":1,"message":"301","line":26,"column":9,"nodeType":"266","messageId":"267","endLine":26,"endColumn":14},{"ruleId":"264","severity":1,"message":"302","line":51,"column":9,"nodeType":"266","messageId":"267","endLine":51,"endColumn":20},{"ruleId":"303","severity":1,"message":"304","line":63,"column":11,"nodeType":"305","endLine":63,"endColumn":53},{"ruleId":"303","severity":1,"message":"304","line":66,"column":11,"nodeType":"305","endLine":66,"endColumn":50},{"ruleId":"303","severity":1,"message":"304","line":69,"column":11,"nodeType":"305","endLine":69,"endColumn":58},{"ruleId":"303","severity":1,"message":"304","line":74,"column":9,"nodeType":"305","endLine":74,"endColumn":28},{"ruleId":"293","replacedBy":"345"},{"ruleId":"295","replacedBy":"346"},{"ruleId":"264","severity":1,"message":"268","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":25},{"ruleId":"264","severity":1,"message":"273","line":33,"column":11,"nodeType":"266","messageId":"267","endLine":33,"endColumn":14},{"ruleId":"303","severity":1,"message":"304","line":188,"column":9,"nodeType":"305","endLine":188,"endColumn":28},{"ruleId":"303","severity":1,"message":"304","line":218,"column":9,"nodeType":"305","endLine":218,"endColumn":28},{"ruleId":"303","severity":1,"message":"304","line":230,"column":9,"nodeType":"305","endLine":230,"endColumn":28},{"ruleId":"303","severity":1,"message":"304","line":243,"column":11,"nodeType":"305","endLine":243,"endColumn":62},{"ruleId":"303","severity":1,"message":"304","line":246,"column":11,"nodeType":"305","endLine":246,"endColumn":65},{"ruleId":"303","severity":1,"message":"304","line":249,"column":11,"nodeType":"305","endLine":249,"endColumn":59},{"ruleId":"303","severity":1,"message":"304","line":252,"column":11,"nodeType":"305","endLine":252,"endColumn":61},{"ruleId":"303","severity":1,"message":"304","line":258,"column":11,"nodeType":"305","endLine":258,"endColumn":56},{"ruleId":"303","severity":1,"message":"304","line":261,"column":11,"nodeType":"305","endLine":261,"endColumn":60},{"ruleId":"303","severity":1,"message":"304","line":264,"column":11,"nodeType":"305","endLine":264,"endColumn":58},{"ruleId":"303","severity":1,"message":"304","line":270,"column":11,"nodeType":"305","endLine":270,"endColumn":54},{"ruleId":"303","severity":1,"message":"304","line":273,"column":11,"nodeType":"305","endLine":273,"endColumn":50},{"ruleId":"303","severity":1,"message":"304","line":276,"column":11,"nodeType":"305","endLine":276,"endColumn":59},{"ruleId":"264","severity":1,"message":"320","line":1,"column":27,"nodeType":"266","messageId":"267","endLine":1,"endColumn":36},{"ruleId":"264","severity":1,"message":"347","line":2,"column":8,"nodeType":"266","messageId":"267","endLine":2,"endColumn":15},{"ruleId":"264","severity":1,"message":"348","line":9,"column":19,"nodeType":"266","messageId":"267","endLine":9,"endColumn":29},{"ruleId":"264","severity":1,"message":"349","line":10,"column":22,"nodeType":"266","messageId":"267","endLine":10,"endColumn":35},{"ruleId":"264","severity":1,"message":"350","line":35,"column":9,"nodeType":"266","messageId":"267","endLine":35,"endColumn":23},{"ruleId":"351","severity":1,"message":"352","line":49,"column":16,"nodeType":"266","messageId":"353","endLine":49,"endColumn":17},{"ruleId":"264","severity":1,"message":"354","line":63,"column":9,"nodeType":"266","messageId":"267","endLine":63,"endColumn":20},{"ruleId":"264","severity":1,"message":"355","line":105,"column":9,"nodeType":"266","messageId":"267","endLine":105,"endColumn":23},{"ruleId":"264","severity":1,"message":"356","line":118,"column":9,"nodeType":"266","messageId":"267","endLine":118,"endColumn":27},{"ruleId":"293","replacedBy":"357"},{"ruleId":"295","replacedBy":"358"},{"ruleId":"293","replacedBy":"359"},{"ruleId":"295","replacedBy":"360"},{"ruleId":"264","severity":1,"message":"361","line":2,"column":28,"nodeType":"266","messageId":"267","endLine":2,"endColumn":32},{"ruleId":"264","severity":1,"message":"274","line":11,"column":8,"nodeType":"266","messageId":"267","endLine":11,"endColumn":22},{"ruleId":"264","severity":1,"message":"362","line":17,"column":8,"nodeType":"266","messageId":"267","endLine":17,"endColumn":15},{"ruleId":"264","severity":1,"message":"363","line":24,"column":10,"nodeType":"266","messageId":"267","endLine":24,"endColumn":24},{"ruleId":"289","severity":1,"message":"364","line":78,"column":6,"nodeType":"291","endLine":78,"endColumn":8,"suggestions":"365"},{"ruleId":"351","severity":1,"message":"352","line":127,"column":14,"nodeType":"266","messageId":"353","endLine":127,"endColumn":15},{"ruleId":"264","severity":1,"message":"366","line":190,"column":9,"nodeType":"266","messageId":"267","endLine":190,"endColumn":20},{"ruleId":"264","severity":1,"message":"367","line":205,"column":9,"nodeType":"266","messageId":"267","endLine":205,"endColumn":21},{"ruleId":"303","severity":1,"message":"304","line":291,"column":15,"nodeType":"305","endLine":291,"endColumn":50},{"ruleId":"303","severity":1,"message":"304","line":308,"column":13,"nodeType":"305","endLine":308,"endColumn":48},{"ruleId":"293","replacedBy":"368"},{"ruleId":"295","replacedBy":"369"},{"ruleId":"264","severity":1,"message":"370","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":14},{"ruleId":"264","severity":1,"message":"371","line":5,"column":8,"nodeType":"266","messageId":"267","endLine":5,"endColumn":14},{"ruleId":"264","severity":1,"message":"372","line":8,"column":28,"nodeType":"266","messageId":"267","endLine":8,"endColumn":34},{"ruleId":"264","severity":1,"message":"373","line":9,"column":10,"nodeType":"266","messageId":"267","endLine":9,"endColumn":22},{"ruleId":"264","severity":1,"message":"374","line":14,"column":10,"nodeType":"266","messageId":"267","endLine":14,"endColumn":20},{"ruleId":"264","severity":1,"message":"375","line":14,"column":22,"nodeType":"266","messageId":"267","endLine":14,"endColumn":35},{"ruleId":"293","replacedBy":"376"},{"ruleId":"295","replacedBy":"377"},{"ruleId":"293","replacedBy":"378"},{"ruleId":"295","replacedBy":"379"},{"ruleId":"264","severity":1,"message":"320","line":1,"column":35,"nodeType":"266","messageId":"267","endLine":1,"endColumn":44},{"ruleId":"264","severity":1,"message":"380","line":4,"column":10,"nodeType":"266","messageId":"267","endLine":4,"endColumn":22},{"ruleId":"303","severity":1,"message":"304","line":106,"column":9,"nodeType":"305","endLine":106,"endColumn":31},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'canvasOwn' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'app' is assigned a value but never used.","'firebaseConfig' is defined but never used.","'TextAdjust' is defined but never used.","'RectAdjust' is defined but never used.","'PaintingTool' is defined but never used.","'SaveAndLoad' is defined but never used.","'uuidv4' is defined but never used.","'logo' is defined but never used.","'doc' is defined but never used.","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'browserHistory' is defined but never used.","'createBrowserHistory' is defined but never used.","'shareInput' is assigned a value but never used.","'setShareInput' is assigned a value but never used.","'output' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'canvas' and 'db'. Either include them or remove the dependency array.","ArrayExpression",["381"],"no-native-reassign",["382"],"no-negated-in-lhs",["383"],"'textbox' is defined but never used.","'author' is assigned a value but never used.","'addTextbox' is assigned a value but never used.","'freeDwawing' is assigned a value but never used.","'Spray' is assigned a value but never used.","'stopDwawing' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'fabric' is defined but never used.","'firebase' is defined but never used.","'saveALoad' is defined but never used.","'note' is defined but never used.","'Router' is defined but never used.","'Link' is defined but never used.","'showSave' is assigned a value but never used.","'DeleteAll' is defined but never used.","'Group' is defined but never used.","'Ungroup' is defined but never used.","'db' is assigned a value but never used.","'group' is assigned a value but never used.","'ungroup' is assigned a value but never used.","'deleteAll' is assigned a value but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'reportWebVitals' is defined but never used.","'corner' is defined but never used.","'row' is defined but never used.","'colum' is defined but never used.","'aa' is defined but never used.","'triangle' is defined but never used.","'compass' is defined but never used.","'sigma' is defined but never used.","'bottom' is defined but never used.","'signOut' is defined but never used.","react/jsx-pascal-case","Imported JSX component Try_It must be in PascalCase or SCREAMING_SNAKE_CASE",["382"],["383"],"'user' is assigned a value but never used.","'history' is assigned a value but never used.","'fillColorImg' is defined but never used.","'strokeColorImg' is defined but never used.","'StrokeColorImg' is defined but never used.",["382"],["383"],["382"],["383"],["382"],["383"],"'pagePic' is defined but never used.","'setNewName' is assigned a value but never used.","'setShareEmail' is assigned a value but never used.","'boardPicHandle' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'renameBoard' is assigned a value but never used.","'shareBoardUSer' is assigned a value but never used.","'shareBoardObserver' is assigned a value but never used.",["382"],["383"],["382"],["383"],"'Logo' is defined but never used.","'Proverb' is defined but never used.","'userEmailfromF' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.",["384"],"'deleteBoard' is assigned a value but never used.","'onfocusBoard' is assigned a value but never used.",["382"],["383"],"'pencil' is defined but never used.","'eraser' is defined but never used.","'ColorP' is defined but never used.","'SketchPicker' is defined but never used.","'colorPlate' is assigned a value but never used.","'setColorPlate' is assigned a value but never used.",["382"],["383"],["382"],["383"],"'useAuthState' is defined but never used.",{"desc":"385","fix":"386"},"no-global-assign","no-unsafe-negation",{"desc":"387","fix":"388"},"Update the dependencies array to be: [canvas, db]",{"range":"389","text":"390"},"Update the dependencies array to be: [db]",{"range":"391","text":"392"},[23077,23079],"[canvas, db]",[3226,3228],"[db]"]